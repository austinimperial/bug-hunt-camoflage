{"version":3,"sources":["components/simulationControls/presetImageSelect/pics/sand.jpg","components/simulationControls/presetImageSelect/pics/white.jpg","components/simulationControls/presetImageSelect/pics/candy.jpg","components/simulationControls/presetImageSelect/pics/carpet.jpg","components/simulationControls/presetImageSelect/pics/grass.jpg","components/simulationControls/presetImageSelect/pics/gravel.jpg","components/simulationControls/presetImageSelect/pics/leaves.jpg","globalState/screenSizes/getScreenSizes.js","globalState/screenSizes/getWidth.js","globalState/screenSizes/index.js","globalState/svgContainerDimensions/index.js","globalState/bugs/tree.js","globalState/bugs/getColorMutation.js","globalState/bugs/eatAndSpawnNew.js","globalState/bugs/getOffspringCoors.js","globalState/bugs/getRandomRGB.js","globalState/bugs/getRandCoors.js","globalState/bugs/getInitialBugs.js","globalState/bugs/getCustomInitialBugs.js","globalState/bugs/getRandomLivingBugNode.js","globalState/bugs/index.js","globalState/bgImage/index.js","globalState/snapshotsDisplay/canvas/getDocumentDimensions.js","globalState/snapshotsDisplay/canvas/drawSnapshots.js","globalState/snapshotsDisplay/canvas/drawCanvas.js","globalState/snapshotsDisplay/svg/getMidpoints.js","globalState/snapshotsDisplay/svg/getPathHorizontal.js","globalState/snapshotsDisplay/svg/getPathVertical.js","globalState/snapshotsDisplay/svg/getColWidthHorizontal.js","globalState/snapshotsDisplay/svg/getRowHeightVertical.js","globalState/snapshotsDisplay/svg/formatOrganismPath.js","globalState/snapshotsDisplay/svg/organism.js","globalState/snapshotsDisplay/svg/getOrganismList.js","globalState/snapshotsDisplay/svg/getOrganisms.js","globalState/snapshotsDisplay/index.js","components/svgContainer/styles.js","components/bug/styles.js","components/bug/index.js","components/bug/bugPath.js","components/domColors/domImageColors/computeImgPalette.js","components/domColors/domImageColors/styles.js","components/domColors/shared/styles.js","components/domColors/domImageColors/index.js","components/domColors/domImageColors/uInt8ClampedArrayToPixels.js","components/domColors/domPopulationColors/getBugPalette.js","components/domColors/domPopulationColors/styles.js","components/domColors/domPopulationColors/index.js","components/domColors/styles.js","components/domColors/index.js","components/svgContainer/index.js","components/svgContainer/getContainerOffset.js","components/snapshots/styles.js","components/snapshots/canvasSnapshots/styles.js","components/snapshots/canvasSnapshots/index.js","shared/slider/styles.js","shared/slider/index.js","components/snapshots/snapshotsControls/stretchFactorSlider/index.js","components/snapshots/snapshotsControls/thicknessSlider/index.js","components/snapshots/snapshotsControls/lineWidthSlider/index.js","components/snapshots/snapshotsControls/snapshotSwitchButton/styles.js","components/snapshots/snapshotsControls/snapshotSwitchButton/index.js","components/snapshots/snapshotsControls/styles.js","components/snapshots/snapshotsControls/index.js","components/snapshots/svgSnapshots/styles.js","components/snapshots/svgSnapshots/index.js","components/snapshots/index.js","components/simulationControls/styles.js","components/simulationControls/controlCollapse/styles.js","components/simulationControls/collapse/styles.js","components/simulationControls/collapse/index.js","components/simulationControls/fileInput/styles.js","components/simulationControls/fileInput/index.js","components/simulationControls/populationSlider/styles.js","components/simulationControls/populationSlider/index.js","components/simulationControls/bugSizeSlider/styles.js","components/simulationControls/bugSizeSlider/index.js","components/simulationControls/offspringDistanceSlider/styles.js","components/simulationControls/offspringDistanceSlider/index.js","components/simulationControls/growSpeedSlider/styles.js","components/simulationControls/growSpeedSlider/index.js","components/simulationControls/maxMutationSlider/styles.js","components/simulationControls/maxMutationSlider/index.js","shared/downArrow.js","components/simulationControls/presetImageSelect/styles.js","components/simulationControls/presetImageSelect/index.js","components/simulationControls/collapse/collapseBar/styles.js","components/simulationControls/collapse/collapseBar/index.js","components/simulationControls/controlCollapse/index.js","components/simulationControls/customBugsCollapse/styles.js","components/simulationControls/customInitialBugs/regExp.js","components/simulationControls/customInitialBugs/styles.js","components/simulationControls/customInitialBugs/index.js","components/simulationControls/customInitialBugs/example.js","components/simulationControls/customInitialBugs/getArrayFromText.js","components/simulationControls/customBugsCollapse/index.js","components/simulationControls/resetButton/styles.js","components/simulationControls/resetButton/index.js","components/simulationControls/randomStep/styles.js","components/simulationControls/randomStep/index.js","components/simulationControls/index.js","components/simulation/styles.js","components/simulation/index.js","components/info/styles.js","components/info/index.js","components/info/text.js","components/header/shared/styles.js","components/header/infoLinkButton/index.js","components/header/homeLinkButton/index.js","components/header/styles.js","components/header/index.js","components/footer/styles.js","components/footer/index.js","components/footer/citation.js","AppStyles.js","App.js","serviceWorker.js","index.js","mainTheme.js"],"names":["module","exports","getScreenSizes","sizeInPixels","sizeRanges","xxs","xs","sm","md","lg","xl","sizes","Object","entries","forEach","sr","getWidth","window","innerWidth","document","documentElement","clientWidth","body","ScreenSizesContext","React","createContext","_","require","ScreenSizesProvider","children","useState","screenSizes","setScreenSizes","width","setWidth","prevScreenSize","setPrevScreenSize","useEffect","updateWidth","addEventListener","throttle","removeEventListener","currentScreenSizes","isEqual","prevScreenSizes","filter","entry","getScreenSize","value","Provider","SvgDimensionsContext","SvgDimensionsProvider","height","svgContainerDimensions","setSvgContainerDimensions","left","top","canvasOffset","setCanvasOffset","Node","data","firstChild","rightSibling","isRoot","this","addChild","node","newNode","addSibling","flatten","getLivingBugNodes","dataOnly","isAlive","getColorMutation","parentBug","maxMutationStep","clone","color","map","colorGene","randStep","Math","floor","random","mutation","newGene","eatAndSpawnNew","eatenBug","bugs","getRandomLivingBugNode","maxOffspringDistance","bugSize","newbugs","assign","changeNodeData","dataId","changes","id","randomSurvivor","offspringCoors","parent","randRadius","randRadian","PI","xStep","cos","yStep","sin","xMax","yMax","newX","x","newY","y","getOffspringCoors","newBug","uuid","orientation","getRandomRBG","i","newColor","push","ceil","getRandCoors","getInitialBugs","populationSize","root","randCoors","getRandomRGB","getCustomInitialBugs","customColorArray","length","bugNode","livingBugs","BugsContext","BugsProvider","setBugs","setPopulationSize","setBugSize","setMaxMutationStep","setMaxOffspringDistance","growSpeed","setGrowSpeed","populationSnapshots","setPopulationSnapshots","stepCount","setStepCount","useContext","step","useCallback","alert","newBugs","newPopulationSnapshot","prev","prevPopulationSnapshots","MAX_STEP_COUNT","BgImageContext","BgImageProvider","bgImage","setBgImage","getDocumentDimensions","clientHeight","drawSnapshotsHorizontal","screenDimensions","canvas","stretchFactor","thickness","ctx","getContext","colWidth","parseFloat","rowHeight","clearRect","ps","rowIndex","bug","columnIndex","fillStyle","fillRect","drawSnapshotsVertical","throttledDrawSnapshotsHorizontal","throttledDrawSnapshotsVertical","drawCanvas","snapshotsCanvasRef","isVertical","current","getMidpoints","pointList","point","p1x","p1y","p2x","p2y","nextPoint","getPathHorizontal","midpoints","firstXCoor","firstYCoor","reduce","acc","xCoor","yCoor","midpointX","midpointY","lenghth","getPathVertical","getColWidthHorizontal","getRowHeightVertical","formatOrganismPath","organismList","org","path","throttledFormatOrganismPath","Organism","formattedColor","getOrganismList","idList","includes","newOrg","pathItem","getOrganisms","orgList","SnapshotsDisplayContext","SnapshotsDisplayProvider","setIsVertical","setStretchFactor","setThickness","setSnapshotsCanvasRef","setScreenDimensions","organisms","setOrganisms","lineWidth","setLineWidth","displaySvg","setDisplaySvg","handleResize","resetCanvasDimens","docDimens","StyledContainer1","styled","div","props","small","big","StyledContainer2","StyledImgAndCanvasContainer","StyledSvgCanvas","StyledBgImg","img","StyledSvg","svg","keyframes","Bug","isGrowing","setIsGrowing","timer","setTimeout","clearTimeout","hanldleMouseEnter","style","position","version","xmlns","viewBox","xml","fill","onMouseEnter","onTouchStart","transform","transform-origin","d","quantize","StyledSwatch","veryLight","StyledContainer","StyledSwatchContainer","StyledTitle","p","theme","secondaryFont","DomImageColors","maxColorCount","Array","palette","setPalette","url","colorCount","callback","Image","context","createElement","onload","drawImage","pixels","uInt","pixelCount","uInt8ClampedArrayToPixels","getImageData","colorMap","src","computeImgPalette","key","attrs","backgroundColor","DomPopulationColors","bugPalette","rgbArray","getBugPalette","DomColors","SvgContainer","svgContainerRef","useRef","newCanvasOffset","offsetLeft","offsetTop","right","getContainerOffset","ref","StyledP","StyledTitleContainer","StyledScrollBox","CanvasSnapshots","canvasRef","StyledValueDisplay","StyledName","StyledInputAndValueContainer","StyledInput","input","sliderWidth","Slider","min","max","initial","name","unit","containerStyle","doSomethingOnMouseUp","doSomethingOnChange","rangeValue","setRangeValue","isChanging","setIsChanging","type","onMouseUp","e","undefined","target","onChange","StretchFactorSlider","newValue","LineWidthSlider","StyledButton","button","isSelected","SnapshotSwitchButton","onClick","StyledSliderContainer","SnapshotsControls","StyledPath","StyledBackground","SvgSnapshots","organism","strokeWidth","stroke","strokeLinecap","Snapshots","StyledInnerCollapseContainer","isCollapsed","Collapse","collapseContainerStyle","setHeight","containerRef","scrollHeight","StyledFileInput","StyledLabel","label","FileInput","title","accept","URL","createObjectURL","files","PopulationSlider","handleMouseUp","BugSizeSlider","OffspringDistanceSlider","GrowSpeedSlider","downArrowSvgString","StyledSelect","select","pics","white","sand","candy","carpet","grass","gravel","leaves","PresetImageSelect","pic","StyledCollapseBar","CollapseBar","ControlCollapse","setIsCollapsed","colorListRegExp","RegExp","rgbArrayRegExp","colorValueRegExp","StyledTextArea","textarea","isInvalid","subtext","CustomInitialBugs","setIsInvalid","text","setText","match","colorString","colorValuesArray","parseInt","getArrayFromText","customBugs","CustomBugCollapse","ResetButton","RandomStep","stepInput","setStepInput","handleOnClick","randomLivingBugNode","SimulationControls","display","StyledSubContainer1","Simulation","StyledSectionHeader","titleFont","StyledContentColumn","Info","InfoLinkButton","to","HomeLinkButton","Header","location","useLocation","pathname","Footer","StyledAppContainer","App","exact","render","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cdf25e60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sand.41b6aba6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/white.19a75e81.jpg\";","module.exports = __webpack_public_path__ + \"static/media/candy.6e6c275d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/carpet.2efe0758.jpg\";","module.exports = __webpack_public_path__ + \"static/media/grass.b20508f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gravel.57f747e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leaves.c61169cc.jpg\";","export const getScreenSizes = (sizeInPixels) => {\n  const sizeRanges = {\n    xxs: [0, 468],\n    xs: [468, 576],\n    sm: [576, 768],\n    md: [768, 992],\n    lg: [992, 1200],\n    xl: [1200, 100000],\n  };\n  const sizes = { ...sizeRanges };\n  const sizeRangesEntries = Object.entries(sizeRanges);\n  sizeRangesEntries.forEach((sr) => {\n    sr[1][0] < sizeInPixels && sizeInPixels <= sr[1][1]\n      ? (sizes[sr[0]] = true)\n      : (sizes[sr[0]] = false);\n  });\n  return sizes;\n};\n","export const getWidth = () => {\n  const w =\n    window.innerWidth ||\n    document.documentElement.clientWidth ||\n    document.body.clientWidth;\n  return w;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { getScreenSizes } from \"./getScreenSizes\";\nimport { getWidth } from \"./getWidth\";\nexport const ScreenSizesContext = React.createContext();\nconst _ = require(\"lodash\");\n\nfunction ScreenSizesProvider({ children }) {\n  const [screenSizes, setScreenSizes] = useState(getScreenSizes(getWidth()));\n  const [width, setWidth] = useState(0);\n  const [prevScreenSize, setPrevScreenSize] = useState(\"a\");\n\n  useEffect(() => {\n    const updateWidth = () => setWidth(getWidth());\n\n    window.addEventListener(\"resize\", _.throttle(updateWidth, 200));\n    return () =>\n      window.removeEventListener(\"resize\", _.throttle(updateWidth, 200));\n  }, []);\n\n  const getScreenSize = (screenSizes) => {\n    // returns the current screen size as a string\n    return Object.entries(screenSizes).filter((entry) => entry[1])[0][0];\n  };\n\n  useEffect(() => {\n    // only update screenSizes if prev is different than current\n    const currentScreenSizes = getScreenSizes(getWidth());\n    if (_.isEqual(currentScreenSizes, screenSizes)) return;\n\n    setScreenSizes((prevScreenSizes) => {\n      setPrevScreenSize(getScreenSize(prevScreenSizes));\n      return currentScreenSizes;\n    });\n  }, [width, setScreenSizes]);\n\n  const sizeRanges = {\n    xxs: [0, 468],\n    xs: [468, 576],\n    sm: [576, 768],\n    md: [768, 992],\n    lg: [992, 1200],\n    xl: [1200, 100000],\n  };\n\n  const value = {\n    ...screenSizes,\n    prevScreenSize,\n    sizeRanges,\n  };\n\n  return (\n    <ScreenSizesContext.Provider value={value}>\n      {children}\n    </ScreenSizesContext.Provider>\n  );\n}\n\nexport default ScreenSizesProvider;\n","import React, { useState } from \"react\";\nexport const SvgDimensionsContext = React.createContext();\n\nfunction SvgDimensionsProvider({ children }) {\n  // local state\n  const [svgContainerDimensions, setSvgContainerDimensions] = useState({\n    width: 500,\n    height: 500,\n  });\n  const [canvasOffset, setCanvasOffset] = useState({ left: 0, top: 0 });\n\n  const value = {\n    svgContainerDimensions,\n    setSvgContainerDimensions,\n    canvasOffset,\n    setCanvasOffset,\n  };\n\n  return (\n    <SvgDimensionsContext.Provider value={value}>\n      {children}\n    </SvgDimensionsContext.Provider>\n  );\n}\n\nexport default SvgDimensionsProvider;\n","export class Node {\n  constructor({\n    data = null,\n    firstChild = null,\n    rightSibling = null,\n    isRoot = false,\n  }) {\n    this.isRoot = isRoot;\n    this.data = data;\n    this.firstChild = firstChild;\n    this.rightSibling = rightSibling;\n  }\n}\n\nexport const addSibling = (node, data) => {\n  const newNode = new Node({ data });\n  if (node.rightSibling === null) return (node.rightSibling = newNode);\n  return addSibling(node.rightSibling, data);\n};\n\nexport const addChild = (node, data) => {\n  const newNode = new Node({ data });\n  if (node.firstChild) return addSibling(node.firstChild, data);\n  return (node.firstChild = newNode);\n};\n\nexport const flatten = (node) => {\n  if (!node) return [];\n  if (node.isRoot)\n    return [...flatten(node.firstChild), ...flatten(node.rightSibling)];\n  if (!node.firstChild && !node.rightSibling) return [node];\n  if (!node.firstChild && node.rightSibling)\n    return [node, ...flatten(node.rightSibling)];\n  if (node.firstChild && !node.rightSibling)\n    return [node, ...flatten(node.firstChild)];\n  return [node, ...flatten(node.firstChild), ...flatten(node.rightSibling)];\n};\n\nexport const changeNodeData = (node, dataId, changes) => {\n  if (!node) return false;\n  if (!node.isRoot && node.data.id === dataId) {\n    return (node.data = { ...node.data, ...changes });\n  }\n  return (\n    changeNodeData(node.firstChild, dataId, changes) ||\n    changeNodeData(node.rightSibling, dataId, changes)\n  );\n};\n\nexport const getNode = (node, dataId) => {\n  if (!node) return false;\n  if (!node.isRoot && node.data.id === dataId) {\n    return node;\n  }\n  return getNode(node.firstChild, dataId) || getNode(node.rightSibling, dataId);\n};\n\nexport const getLivingBugNodes = (node, dataOnly = false) => {\n  if (!node) return [];\n  if (node.isRoot)\n    return [\n      ...getLivingBugNodes(node.firstChild, dataOnly),\n      ...getLivingBugNodes(node.rightSibling, dataOnly),\n    ];\n\n  const isAlive = (node) => {\n    if (node.data.isAlive) {\n      return dataOnly ? [node.data] : [node];\n    } else {\n      return [];\n    }\n  };\n\n  if (!node.firstChild && !node.rightSibling) return [...isAlive(node)];\n  if (!node.firstChild && node.rightSibling)\n    return [\n      ...isAlive(node),\n      ...getLivingBugNodes(node.rightSibling, dataOnly),\n    ];\n  if (node.firstChild && !node.rightSibling)\n    return [...isAlive(node), ...getLivingBugNodes(node.firstChild, dataOnly)];\n  return [\n    ...isAlive(node),\n    ...getLivingBugNodes(node.firstChild, dataOnly),\n    ...getLivingBugNodes(node.rightSibling, dataOnly),\n  ];\n};\n","export default function getColorMutation(parentBug, maxMutationStep) {\n  if (parentBug.clone) return parentBug.color\n  return parentBug.color.map((colorGene) => {\n    const randStep = () => Math.floor(Math.random() * maxMutationStep) + 1;\n    const mutation = randStep() - randStep();\n    const newGene = colorGene + mutation;\n    if (newGene < 0) return 0;\n    if (newGene > 255) return 255;\n    return colorGene + mutation;\n  });\n}\n","//import getNewOffspring2 from \"./getNewOffspring2\";\nimport { Node, changeNodeData, addChild } from \"./tree\";\nimport uuid from \"react-uuid\";\nimport getOffspringCoors from \"./getOffspringCoors\";\nimport getColorMutation from \"./getColorMutation\";\n\nexport default function eatAndSpawnNew(\n  eatenBug,\n  bugs,\n  getRandomLivingBugNode,\n  maxOffspringDistance,\n  svgContainerDimensions,\n  bugSize,\n  maxMutationStep\n) {\n  let newbugs = Object.assign(new Node({}), bugs);\n\n  // eat bug\n  changeNodeData(newbugs, eatenBug.id, { isAlive: false });\n\n  // spawn new\n  const randomSurvivor = getRandomLivingBugNode(newbugs);\n  const offspringCoors = getOffspringCoors(\n    maxOffspringDistance,\n    randomSurvivor.data,\n    svgContainerDimensions,\n    bugSize\n  );\n\n  const newBug = {\n    x: offspringCoors.x,\n    y: offspringCoors.y,\n    isAlive: true,\n    color: getColorMutation(randomSurvivor.data, maxMutationStep),\n    id: uuid(),\n    orientation: Math.floor(Math.random() * 360),\n    clone: randomSurvivor.data.clone,\n  };\n\n  addChild(randomSurvivor, newBug);\n\n  return newbugs;\n}\n","export default function getOffspringCoors(\n  maxOffspringDistance,\n  parent,\n  svgContainerDimensions,\n  bugSize\n) {\n  // get random point within given radius\n  const randRadius = Math.floor(Math.random() * maxOffspringDistance);\n  const randDegree = Math.floor(Math.random() * 360);\n  const randRadian = (randDegree * Math.PI) / 180;\n  const xStep = Math.cos(randRadian) * randRadius;\n  const yStep = Math.sin(randRadian) * randRadius;\n\n  // find bounds of canvas\n  const xMax = svgContainerDimensions.width - bugSize;\n  const yMax = svgContainerDimensions.height - bugSize;\n\n  // parent coors are ratio\n  var newX = parent.x * svgContainerDimensions.width + xStep;\n  var newY = parent.y * svgContainerDimensions.height + yStep;\n\n  // convert out-of-bounds coordinates to on-the-border coordinates\n  if (newX > xMax) {\n    newX = xMax;\n  }\n  if (newX < 0) {\n    // so that you don't get multiple bugs stacked up in the corners\n    newX = Math.floor(Math.random() * 10);\n  }\n  if (newY > yMax) {\n    newY = yMax;\n  }\n  if (newY < 0) {\n    // so that you don't get multiple bugs stacked up in the corners\n    newY = Math.floor(Math.random() * 10);\n  }\n\n  const result = {\n    x: Math.floor(newX) / svgContainerDimensions.width,\n    y: Math.floor(newY) / svgContainerDimensions.height,\n  };\n  return result;\n}\n","export default function getRandomRBG() {\n  let newColor = [];\n  let i;\n  for (i = 0; i < 3; i++) {\n    newColor.push(Math.ceil(Math.random() * 255));\n  }\n  return newColor;\n}\n","\nexport default function getRandCoors(svgContainerDimensions, bugSize) {\n  return {\n    x:\n      Math.floor(Math.random() * (svgContainerDimensions.width - bugSize)) /\n      svgContainerDimensions.width,\n    y:\n      Math.floor(Math.random() * (svgContainerDimensions.height - bugSize)) /\n      svgContainerDimensions.height,\n  };\n}\n","import getRandomRGB from \"./getRandomRGB\";\nimport getRandCoors from \"./getRandCoors\";\nimport uuid from \"react-uuid\";\nimport { Node, addChild } from \"./tree\";\n\nexport default function getInitialBugs(\n  svgContainerDimensions,\n  populationSize,\n  bugSize\n) {\n  let root = new Node({ isRoot: true });\n  for (let i = 0; i < populationSize; i++) {\n    const randCoors = getRandCoors(svgContainerDimensions, bugSize);\n    addChild(root, {\n      x: randCoors.x,\n      y: randCoors.y,\n      isAlive: true,\n      color: getRandomRGB(),\n      id: uuid(),\n      orientation: Math.floor(Math.random() * 360),\n      clone: false,\n    });\n  }\n  return root;\n}\n","import getRandCoors from \"./getRandCoors\";\nimport uuid from \"react-uuid\";\nimport { Node, addChild } from \"./tree\";\n\nexport default function getCustomInitialBugs(\n  svgContainerDimensions,\n  bugSize,\n  customColorArray\n) {\n  let root = new Node({ isRoot: true });\n  for (let i = 0; i < customColorArray.length; i++) {\n    const randCoors = getRandCoors(svgContainerDimensions, bugSize);\n    addChild(root, {\n      x: randCoors.x,\n      y: randCoors.y,\n      isAlive: true,\n      color: customColorArray[i].color,\n      id: uuid(),\n      orientation: Math.floor(Math.random() * 360),\n      clone: customColorArray[i].clone,\n    });\n  }\n  return root;\n}","// import { flatten } from \"./tree\";\n// export default function getRandomLivingBugNode(bugNode) {\n//   const livingBugs = flatten(bugNode).filter((bug) => bug.data.isAlive);\n//   const randIndex = Math.floor(Math.random() * livingBugs.length);\n//   return livingBugs[randIndex];\n// }\n\nimport { getLivingBugNodes } from \"./tree\";\nexport default function getRandomLivingBugNode(bugNode) {\n  const livingBugs = getLivingBugNodes(bugNode);\n  const randIndex = Math.floor(Math.random() * livingBugs.length);\n  return livingBugs[randIndex];\n}\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\nimport { SvgDimensionsContext } from \"globalState/svgContainerDimensions/index\";\nimport eatAndSpawnNew from \"./eatAndSpawnNew\";\nimport getInitialBugs from \"./getInitialBugs\";\nimport getCustomInitialBugs from \"./getCustomInitialBugs\"\nimport getRandomLivingBugNode from \"./getRandomLivingBugNode\";\nimport { Node, flatten, getLivingBugNodes } from \"./tree\";\nexport const BugsContext = React.createContext();\nconst _ = require(\"lodash\");\n\nfunction BugsProvider({ children }) {\n  // const\n  const MAX_STEP_COUNT = 3000;\n\n  // local state\n  const [bugs, setBugs] = useState(null);\n  const [populationSize, setPopulationSize] = useState(50);\n  const [bugSize, setBugSize] = useState(12);\n  const [maxMutationStep, setMaxMutationStep] = useState(27);\n  const [maxOffspringDistance, setMaxOffspringDistance] = useState(150);\n  const [growSpeed, setGrowSpeed] = useState(2);\n  const [populationSnapshots, setPopulationSnapshots] = useState([]);\n  const [stepCount, setStepCount] = useState(0);\n\n  // global state\n  const { svgContainerDimensions } = useContext(SvgDimensionsContext);\n\n  useEffect(() => {\n    const newbugs = getInitialBugs(\n      svgContainerDimensions,\n      populationSize,\n      bugSize\n    );\n    setBugs(newbugs);\n  }, []);\n\n  const step = useCallback(\n    (eatenBug) => {\n      if (stepCount > MAX_STEP_COUNT)\n        return alert(`maximum step count of ${MAX_STEP_COUNT} reached`);\n\n      const newBugs = eatAndSpawnNew(\n        eatenBug,\n        bugs,\n        getRandomLivingBugNode,\n        maxOffspringDistance,\n        svgContainerDimensions,\n        bugSize,\n        maxMutationStep\n      );\n\n      const livingBugs = getLivingBugNodes(bugs, true);\n      const newPopulationSnapshot = livingBugs.map((eatenBug) => ({\n        color: eatenBug.color,\n        id: eatenBug.id,\n      }));\n\n      setStepCount((prev) => prev + 1);\n      setBugs(newBugs);\n      setPopulationSnapshots((prevPopulationSnapshots) => [\n        ...prevPopulationSnapshots,\n        newPopulationSnapshot,\n      ]);\n    },\n    [\n      bugs,\n      maxMutationStep,\n      maxOffspringDistance,\n      svgContainerDimensions,\n      bugSize,\n      stepCount,\n    ]\n  );\n\n  const value = {\n    populationSize,\n    setPopulationSize,\n    bugSize,\n    setBugSize,\n    maxMutationStep,\n    setMaxMutationStep,\n    maxOffspringDistance,\n    setMaxOffspringDistance,\n    growSpeed,\n    setGrowSpeed,\n    populationSnapshots,\n    setPopulationSnapshots,\n    bugs,\n    setBugs,\n    eatAndSpawnNew,\n    getInitialBugs,\n    Node,\n    flatten,\n    getRandomLivingBugNode,\n    getLivingBugNodes,\n    step,\n    stepCount,\n    setStepCount,\n    MAX_STEP_COUNT,\n    getCustomInitialBugs\n  };\n\n  return <BugsContext.Provider value={value}>{children}</BugsContext.Provider>;\n}\n\nexport default BugsProvider;\n","import React, { useState } from \"react\";\nexport const BgImageContext = React.createContext();\n\nfunction BgImageProvider({ children }) {\n  const [bgImage, setBgImage] = useState(null);\n\n  const value = {\n    bgImage,\n    setBgImage,\n  };\n\n  return (\n    <BgImageContext.Provider value={value}>{children}</BgImageContext.Provider>\n  );\n}\n\nexport default BgImageProvider;\n","export default function getDocumentDimensions() {\n  return {\n    height: document.documentElement.clientHeight,\n    width: document.documentElement.clientWidth,\n  };\n}\n","const _ = require(\"lodash\");\n\nexport const drawSnapshotsHorizontal = ({\n  populationSnapshots,\n  screenDimensions,\n  populationSize,\n  canvas,\n  stretchFactor,\n  thickness,\n}) => {\n  if (!canvas) return;\n  const ctx = canvas.getContext(\"2d\");\n  const colWidth =\n    (screenDimensions.width * parseFloat(stretchFactor)) /\n    populationSnapshots.length;\n  const rowHeight =\n    (screenDimensions.height / populationSize) * parseFloat(thickness);\n  ctx.clearRect(0, 0, screenDimensions.width, screenDimensions.height);\n  populationSnapshots.forEach((ps, rowIndex) => {\n    ps.forEach((bug, columnIndex) => {\n      ctx.fillStyle = `rgb(${bug.color[0]},${bug.color[1]},${bug.color[2]})`;\n      ctx.fillRect(\n        rowIndex * colWidth,\n        columnIndex * rowHeight,\n        colWidth + 1,\n        rowHeight + 1\n      );\n    });\n  });\n};\n\nexport const drawSnapshotsVertical = ({\n  populationSnapshots,\n  screenDimensions,\n  populationSize,\n  canvas,\n  stretchFactor,\n  thickness,\n}) => {\n  if (!canvas) return;\n  const ctx = canvas.getContext(\"2d\");\n  const colWidth =\n    (screenDimensions.width / populationSize) * parseFloat(thickness);\n  const rowHeight =\n    (screenDimensions.height * parseFloat(stretchFactor)) /\n    populationSnapshots.length;\n  ctx.clearRect(0, 0, screenDimensions.width, screenDimensions.height);\n  populationSnapshots.forEach((ps, rowIndex) => {\n    ps.forEach((bug, columnIndex) => {\n      ctx.fillStyle = `rgb(${bug.color[0]},${bug.color[1]},${bug.color[2]})`;\n      ctx.fillRect(\n        columnIndex * colWidth,\n        rowIndex * rowHeight,\n        colWidth + 1,\n        rowHeight + 1\n      );\n    });\n  });\n};\n\nexport const throttledDrawSnapshotsHorizontal = _.throttle(\n  drawSnapshotsHorizontal,\n  3000\n);\nexport const throttledDrawSnapshotsVertical = _.throttle(\n  drawSnapshotsVertical,\n  3000\n);\n","import {\n  drawSnapshotsHorizontal,\n  drawSnapshotsVertical,\n  throttledDrawSnapshotsVertical,\n  throttledDrawSnapshotsHorizontal,\n} from \"./drawSnapshots\";\n\nexport default function drawCanvas({\n  snapshotsCanvasRef,\n  populationSize,\n  populationSnapshots,\n  screenDimensions,\n  isVertical,\n  throttle,\n  stretchFactor,\n  thickness,\n}) {\n  if (snapshotsCanvasRef === null) return;\n\n  if (!throttle && !isVertical)\n    return drawSnapshotsHorizontal({\n      populationSnapshots,\n      screenDimensions,\n      populationSize,\n      canvas: snapshotsCanvasRef.current,\n      stretchFactor,\n      thickness,\n    });\n\n  if (!throttle && isVertical)\n    return drawSnapshotsVertical({\n      populationSnapshots,\n      screenDimensions,\n      populationSize,\n      canvas: snapshotsCanvasRef.current,\n      stretchFactor,\n      thickness,\n    });\n\n  if (!isVertical)\n    return throttledDrawSnapshotsHorizontal({\n      populationSnapshots,\n      screenDimensions,\n      populationSize,\n      canvas: snapshotsCanvasRef.current,\n      stretchFactor,\n      thickness,\n    });\n\n  throttledDrawSnapshotsVertical({\n    populationSnapshots,\n    screenDimensions,\n    populationSize,\n    canvas: snapshotsCanvasRef.current,\n    stretchFactor,\n    thickness,\n  });\n}\n","export function getMidpoint(p1x, p1y, p2x, p2y) {\n  return {\n    x: (p1x + p2x) / 2,\n    y: (p1y + p2y) / 2,\n  };\n}\n\nexport function getMidpoints(pointList) {\n  return pointList.map((point, i) => {\n    if (i === pointList.length - 1) return point;\n    const nextPoint = pointList[i + 1];\n    return getMidpoint(point.x, point.y, nextPoint.x, nextPoint.y);\n  });\n}\n","import { getMidpoints } from \"./getMidpoints\";\n\n//outputs a string that can be assigned to the 'd' property of an SVG <path /> element\n// lines travel left to right\nfunction getPathHorizontal({ pointList, colWidth, rowHeight }) {\n  const midpoints = getMidpoints(pointList);\n\n  // if pointlist is of length 1, just draw lines straight across\n  const firstXCoor = pointList[0].x;\n  const firstYCoor = pointList[0].y * rowHeight + rowHeight / 2;\n  if (pointList.length === 1 && firstXCoor === 0)\n    return `M ${firstXCoor} ${firstYCoor} L ${colWidth} ${firstYCoor} `;\n\n  const path = pointList.reduce((acc, current, i) => {\n    const xCoor = current.x * colWidth;\n    const yCoor = current.y * rowHeight + (rowHeight * 0.75);\n    const midpointX = midpoints[i].x * colWidth;\n    const midpointY = midpoints[i].y * rowHeight + (rowHeight * 0.75);\n\n    // i === 0 means the point is the first in the organism pointlist, could start\n    // anywhere along the display graphic\n    if (i === 0) return `M ${xCoor} ${yCoor} L ${midpointX} ${midpointY} `;\n    if (i === pointList.lenghth - 1) return (acc += `L ${xCoor} ${yCoor}`);\n    return (acc += `Q ${xCoor} ${yCoor} ${midpointX} ${midpointY} `);\n  }, \"\");\n  return path;\n}\n\nexport default getPathHorizontal;\n","import { getMidpoints } from \"./getMidpoints\";\n\n//outputs a string that can be assigned to the 'd' property of an SVG <path /> element\n// lines travel top to bottom\nfunction getPathVertical({ pointList, colWidth, rowHeight }) {\n  const midpoints = getMidpoints(pointList);\n\n  // if pointlist is of length 1, just draw lines straight down\n  const x = pointList[0].y * colWidth;\n  if (pointList.length === 1 && pointList[0].x === 0)\n    return `M ${x} 0 L ${x} ${rowHeight} `;\n\n  const path = pointList.reduce((acc, current, i) => {\n    const yCoor = current.x * rowHeight;\n    const xCoor = current.y * colWidth + (colWidth / 2);\n    const midpointX = midpoints[i].y * colWidth + colWidth / 2;\n    const midpointY = midpoints[i].x * rowHeight;\n\n    if (i === 0) return `M ${xCoor} ${yCoor} L ${midpointX} ${midpointY} `;\n    if (i === pointList.lenghth - 1) return (acc += `L ${xCoor} ${yCoor}`);\n    return (acc += `Q ${xCoor} ${yCoor} ${midpointX} ${midpointY} `);\n  }, \"\");\n  return path;\n}\n\nexport default getPathVertical;\n","const getColWidthHorizontal = (\n  stretchFactor,\n  populationSnapshots,\n  screenDimensions\n) => {\n  if (populationSnapshots.length === 0 || populationSnapshots.length === 1)\n    return screenDimensions.width * parseFloat(stretchFactor);\n  return (\n    (screenDimensions.width * parseFloat(stretchFactor)) /\n    (populationSnapshots.length - 1)\n  );\n};\n\nexport default getColWidthHorizontal;\n","const getRowHeightVertical = (\n  stretchFactor,\n  populationSnapshots,\n  screenDimensions\n) => {\n  if (populationSnapshots.length === 0 || populationSnapshots.length === 1)\n    return screenDimensions.height * parseFloat(stretchFactor);\n  return (\n    (screenDimensions.height * parseFloat(stretchFactor)) /\n    (populationSnapshots.length - 1)\n  );\n};\n\nexport default getRowHeightVertical;\n","import getPathHorizontal from \"./getPathHorizontal\";\nimport getPathVertical from \"./getPathVertical\";\nimport getColWidthHorizontal from \"./getColWidthHorizontal\";\nimport getRowHeightVertical from \"./getRowHeightVertical\";\nconst _ = require(\"lodash\");\n\n// consumes a list of Organisms and formats the path and color for use in SVG element\nexport const formatOrganismPath = ({\n  organismList,\n  screenDimensions,\n  populationSize,\n  stretchFactor,\n  thickness,\n  isVertical,\n  populationSnapshots,\n}) => {\n  if (isVertical) {\n    const colWidth =\n      (screenDimensions.width / populationSize) * parseFloat(thickness);\n\n    const rowHeight = getRowHeightVertical(\n      stretchFactor,\n      populationSnapshots,\n      screenDimensions\n    );\n\n    return organismList.map((org) => {\n      org.path = getPathVertical({\n        pointList: org.pointList,\n        colWidth,\n        rowHeight,\n      });\n      return org;\n    });\n  }\n\n  const colWidth = getColWidthHorizontal(\n    stretchFactor,\n    populationSnapshots,\n    screenDimensions\n  );\n  const rowHeight =\n    (screenDimensions.height / populationSize) * parseFloat(thickness);\n\n  return organismList.map((org) => {\n    org.path = getPathHorizontal({\n      pointList: org.pointList,\n      colWidth,\n      rowHeight,\n    });\n    return org;\n  });\n};\n\nexport const throttledFormatOrganismPath = _.throttle(formatOrganismPath, 2000);\n","class Organism {\n  constructor() {\n    this.id = null;\n    this.pointList = null;\n    this.color = null;\n    this.path = null;\n    this.formattedColor = null;\n  }\n}\nexport default Organism;\n","import Organism from \"./organism\";\n\nfunction updatePointlist(id, array, pathItem) {\n  array.forEach((org) => {\n    if (org.id === id) {\n      org.pointList.push(pathItem);\n    }\n  });\n}\n\n// getOrganismList creates a list of all individual bugs to have ever lived in the simulation\nfunction getOrganismList(populationSnapshots) {\n  const idList = [];\n  const organismList = [];\n  populationSnapshots.forEach((ps, x) => {\n    ps.forEach((bug, y) => {\n      if (!idList.includes(bug.id)) {\n        idList.push(bug.id);\n\n        const newOrg = new Organism();\n        newOrg.id = bug.id;\n        newOrg.pointList = [{ x, y }];\n        newOrg.color = bug.color;\n        newOrg.formattedColor = `rgb(${bug.color[0]},${bug.color[1]},${bug.color[2]})`;\n        return organismList.push(newOrg);\n      }\n\n      return updatePointlist(bug.id, organismList, { x, y });\n    });\n  });\n  return organismList;\n}\n\nexport default getOrganismList;\n","import {\n  throttledFormatOrganismPath,\n  formatOrganismPath,\n} from \"./formatOrganismPath\";\nimport getOrganismList from \"./getOrganismList\";\n\nconst getOrganisms = ({\n  populationSnapshots,\n  populationSize,\n  stretchFactor,\n  thickness,\n  screenDimensions,\n  isVertical,\n  throttle,\n}) => {\n  const orgList = getOrganismList(populationSnapshots);\n\n  if (!throttle) {\n    return formatOrganismPath({\n      organismList: orgList,\n      populationSnapshots,\n      stretchFactor,\n      thickness,\n      populationSize,\n      isVertical,\n      screenDimensions,\n    });\n  }\n\n  return throttledFormatOrganismPath({\n    organismList: orgList,\n    populationSnapshots,\n    stretchFactor,\n    thickness,\n    populationSize,\n    isVertical,\n    screenDimensions,\n  });\n};\n\nexport default getOrganisms;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport getDocumentDimensions from \"./canvas/getDocumentDimensions\";\nimport drawCanvas from \"./canvas/drawCanvas\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport getOrganisms from \"./svg/getOrganisms\";\nexport const SnapshotsDisplayContext = React.createContext();\nconst _ = require(\"lodash\");\n\nfunction SnapshotsDisplayProvider({ children }) {\n  // local state\n  const [isVertical, setIsVertical] = useState(false);\n  const [stretchFactor, setStretchFactor] = useState(1);\n  const [thickness, setThickness] = useState(0.5);\n  const [snapshotsCanvasRef, setSnapshotsCanvasRef] = useState(null);\n  const [screenDimensions, setScreenDimensions] = useState(\n    getDocumentDimensions()\n  );\n  const [organisms, setOrganisms] = useState([]);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [displaySvg, setDisplaySvg] = useState(false);\n\n  // global state\n  const { populationSize, populationSnapshots } = useContext(BugsContext);\n\n  // The drawing is split between two useEffect fuctions so that I can conditionally\n  // change the parameters of the draw function depending on which dependency/ies changed.\n  // Between the two useEffects, all dependencies are covered. This is an unusual\n  // case to be sure. The logic boils down to this: If populationSnapshots is changing,\n  // throttle the draw function. Don't otherwise.\n  useEffect(() => {\n    if (displaySvg) return;\n    drawCanvas({\n      snapshotsCanvasRef,\n      populationSize,\n      populationSnapshots,\n      screenDimensions,\n      isVertical,\n      stretchFactor,\n      thickness,\n      throttle: true,\n    });\n  }, [populationSnapshots]);\n\n  useEffect(() => {\n    if (displaySvg) return;\n    drawCanvas({\n      snapshotsCanvasRef,\n      populationSize,\n      populationSnapshots,\n      screenDimensions,\n      isVertical,\n      stretchFactor,\n      thickness,\n      throttle: false,\n    });\n  }, [\n    screenDimensions,\n    stretchFactor,\n    isVertical,\n    snapshotsCanvasRef,\n    populationSize,\n    thickness,\n    displaySvg,\n  ]);\n\n  const handleResize = _.throttle(() => {\n    const { width, height } = getDocumentDimensions();\n    setScreenDimensions({ width, height });\n    if (width < height) return setIsVertical(true);\n    if (height <= width) return setIsVertical(false);\n  }, 200);\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const resetCanvasDimens = () => {\n    const docDimens = getDocumentDimensions();\n    setScreenDimensions(docDimens);\n  };\n\n  useEffect(() => {\n    if (!displaySvg) return;\n    const organisms = getOrganisms({\n      populationSize,\n      stretchFactor,\n      thickness,\n      screenDimensions,\n      populationSnapshots,\n      isVertical,\n      throttle: true,\n    });\n    setOrganisms(organisms);\n  }, [populationSnapshots]);\n\n  useEffect(() => {\n    if (!displaySvg) return;\n    const organisms = getOrganisms({\n      populationSize,\n      stretchFactor,\n      thickness,\n      screenDimensions,\n      populationSnapshots,\n      isVertical,\n      throttle: false,\n    });\n    setOrganisms(organisms);\n  }, [\n    screenDimensions,\n    stretchFactor,\n    isVertical,\n    populationSize,\n    thickness,\n    displaySvg,\n  ]);\n\n  const value = {\n    snapshotsCanvasRef,\n    setSnapshotsCanvasRef,\n    screenDimensions,\n    setScreenDimensions,\n    isVertical,\n    setIsVertical,\n    resetCanvasDimens,\n    stretchFactor,\n    setStretchFactor,\n    thickness,\n    setThickness,\n    lineWidth,\n    setLineWidth,\n    organisms,\n    displaySvg,\n    setDisplaySvg,\n  };\n\n  return (\n    <SnapshotsDisplayContext.Provider value={value}>\n      {children}\n    </SnapshotsDisplayContext.Provider>\n  );\n}\n\nexport default SnapshotsDisplayProvider;\n","import styled from \"styled-components\";\n\nexport const StyledContainer1 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  \n  ${props => props.small && `\n    padding: 0px;\n  `}\n\n  ${props => props.big && `\n    padding: 10px 0px 0px 0px;\n  `}\n`;\n\nexport const StyledContainer2 = styled.div`\n  position: relative;\n`;\n\nexport const StyledImgAndCanvasContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  padding: 0px;\n  overflow: hidden;\n`;\n\nexport const StyledSvgCanvas = styled.div`\n  outline: none;\n  overflow: hidden;\n  position: relative;\n\n  height: 500px;\n  width: 500px;\n\n  ${(props) =>\n    props.small &&\n    props.isVertical &&\n    `\n    width: 100vw;\n    height: 100vw;\n  `}\n\n  ${(props) =>\n    props.small &&\n    !props.isVertical &&\n    `\n      width: 84vh;\n      height: 84vh;\n    `}\n\n    ${(props) =>\n      props.big &&\n      !props.isVertical &&\n      `\n        width: 75vh;\n        height: 75vh;\n    `}\n`;\n\nexport const StyledBgImg = styled.img`\n  outline: none;\n  border: none;\n  position: absolute;\n  z-index: -1;\n\n  height: 500px;\n  width: 500px;\n\n  ${(props) =>\n    props.small &&\n    props.isVertical &&\n    `\n    width: 100vw;\n    height: 100vw;\n  `}\n\n  ${(props) =>\n    props.small &&\n    !props.isVertical &&\n    `\n    width: 84vh;\n    height: 84vh;\n  `}\n\n  ${(props) =>\n    props.big &&\n    !props.isVertical &&\n    `\n      width: 75vh;\n      height: 75vh;\n  `}\n`;\n","import styled, { keyframes } from \"styled-components\";\n\nexport const grow = (height) => keyframes`{\n    0% {height: 0px;}\n    100% {height: ${height}px;}\n}`;\n\nexport const StyledSvg = styled.svg`\n  animation: ${(props) => grow(props.height)} ${(props) => props.growSpeed}s\n    linear;\n`;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { StyledSvg } from \"./styles\";\nimport { bugPath } from \"./bugPath\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport { SvgDimensionsContext } from \"globalState/svgContainerDimensions/index\";\n\nfunction Bug({ bug }) {\n  // local state\n  const [isGrowing, setIsGrowing] = useState(true);\n\n  // global state\n  const { bugSize, growSpeed, step } = useContext(BugsContext);\n  const { canvasOffset, svgContainerDimensions } = useContext(\n    SvgDimensionsContext\n  );\n\n  // set isGrowing to false once bug is done growing\n  // this is done so that the growing animation is only triggered when the bug first mounts\n  useEffect(() => {\n    let timer = setTimeout(() => setIsGrowing(false), growSpeed * 1000);\n    return () => clearTimeout(timer)\n  }, []);\n\n  const hanldleMouseEnter = () => {\n    step(bug);\n  };\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        left: `${bug.x * svgContainerDimensions.width + canvasOffset.left}px`,\n        top: `${bug.y * svgContainerDimensions.height + canvasOffset.top}px`,\n      }}\n    >\n      <StyledSvg\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 255.036 255.036\"\n        xml=\"preserve\"\n        height={bugSize}\n        fill={`rgb(${bug.color[0]},${bug.color[1]},${bug.color[2]})`}\n        onMouseEnter={hanldleMouseEnter}\n        onTouchStart={hanldleMouseEnter}\n        // growSpeed defaults to zero unless the bug isGrowing immediately after mount\n        // this is so that changes to bugSize do not trigger grow animation.\n        growSpeed={isGrowing ? growSpeed : 0}\n        transform={`rotate(${bug.orientation})`}\n        transform-origin={\"center\"}\n      >\n        <path d={bugPath} />\n      </StyledSvg>\n    </div>\n  );\n}\n\nexport default Bug;\n","export const bugPath = `M237.117,152.137l-34.441-13.32v-11.513c20.07-16.766,31.109-39.068,31.109-62.968c0-8.284-6.716-15-15-15s-15,6.716-15,15\nc0,7.719-1.949,15.088-5.454,21.85c-3.899-7.652-10.185-13.879-17.883-17.699c-0.682-9.476-5.284-21.241-12.532-31.624\nc3.339-7.355,5.343-15.617,5.343-24.362c0-6.903-5.597-12.5-12.5-12.5c-6.903,0-12.5,5.597-12.5,12.5c0,1.72-0.139,3.394-0.39,5.017\nc-6.267-3.747-13.14-6.023-20.351-6.023c-7.212,0-14.085,2.276-20.353,6.023c-0.251-1.623-0.39-3.298-0.39-5.018\nc0-6.903-5.597-12.5-12.5-12.5c-6.903,0-12.5,5.597-12.5,12.5c0,8.745,2.004,17.007,5.343,24.363\nc-7.247,10.383-11.85,22.148-12.532,31.624c-7.698,3.82-13.984,10.047-17.883,17.699c-3.505-6.762-5.454-14.132-5.454-21.851\nc0-8.284-6.716-15-15-15c-8.284,0-15,6.716-15,15c0,23.9,11.038,46.202,31.109,62.968v11.514l-34.441,13.32\nc-7.727,2.988-11.567,11.675-8.579,19.401c2.301,5.948,7.977,9.593,13.993,9.593c1.8,0,3.63-0.326,5.408-1.014l23.933-9.256\nc0.756,8.531,2.939,16.646,6.306,24.118c-6.747,13.264-10.614,28.656-10.614,45.057c0,8.284,6.716,15,15,15s15-6.716,15-15\nc0-6.018,0.734-11.828,2.084-17.314c12.883,10.365,29.246,16.581,47.068,16.581s34.184-6.216,47.067-16.581\nc1.35,5.486,2.084,11.296,2.084,17.314c0,8.284,6.716,15,15,15c8.284,0,15-6.716,15-15c0-16.402-3.867-31.793-10.614-45.057\nc3.367-7.472,5.55-15.587,6.306-24.118l23.933,9.256c1.779,0.688,3.608,1.014,5.408,1.014c6.016,0,11.692-3.645,13.993-9.593\nC248.685,163.811,244.844,155.125,237.117,152.137z`;\n","import uInt8ClampedArrayToPixels from \"./uInt8ClampedArrayToPixels\";\nconst quantize = require(\"quantize\");\n\nexport default function computeImgPalette(url, x, y, colorCount, callback) {\n  var img = new Image();\n  var canvas = document.createElement(\"canvas\");\n  var context = canvas.getContext(\"2d\");\n  img.onload = () => {\n    context.drawImage(img, 0, 0);\n    const data = context.getImageData(0, 0, x, y).data;\n    const pixels = uInt8ClampedArrayToPixels(data, x * y);\n    const colorMap = quantize(pixels, colorCount);\n    callback(colorMap.palette());\n  };\n  img.src = url;\n}\n","import styled from \"styled-components\";\n\nexport const StyledSwatch = styled.div`\n  border-radius: 50%;\n  margin: 0px 5px 0px 5px;\n  height: 20px;\n  width: 20px;\n  background-color: ${(props) =>\n    `rgb(${props.color[0]},${props.color[1]},${props.color[2]})`};\n  ${(props) =>\n    props.veryLight &&\n    `\n        margin: 0px 4px 0px 5px;\n        height: 19px;\n        width: 19px;\n        border: 1px solid black;\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  margin: 5px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nexport const StyledSwatchContainer = styled.div`\n  display: flex;\n`;\n\nexport const StyledTitle = styled.p`\n  margin: 0px;\n  font-family: ${props => props.theme.secondaryFont}, sans-serif;\n  font-size: 12px;\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { BgImageContext } from \"globalState/bgImage/index\";\nimport { SvgDimensionsContext } from \"globalState/svgContainerDimensions/index\";\nimport computeImgPalette from \"./computeImgPalette\";\nimport uuid from \"react-uuid\";\nimport { StyledSwatch } from \"./styles\";\nimport {\n  StyledSwatchContainer,\n  StyledTitle,\n  StyledContainer,\n} from \"../shared/styles\";\n\nfunction DomImageColors({ maxColorCount }) {\n  // local state\n  const [palette, setPalette] = useState(\n    Array(maxColorCount).fill([255, 255, 255])\n  );\n\n  // global state\n  const { bgImage } = useContext(BgImageContext);\n  const { svgContainerDimensions } = useContext(SvgDimensionsContext);\n\n  useEffect(() => {\n    computeImgPalette(\n      bgImage,\n      svgContainerDimensions.width,\n      svgContainerDimensions.height,\n      maxColorCount,\n      setPalette\n    );\n  }, [bgImage, svgContainerDimensions, maxColorCount]);\n\n  return (\n    <StyledContainer>\n      <StyledTitle>dominant colors in image</StyledTitle>\n      <StyledSwatchContainer>\n        {palette.map((color) => (\n          <StyledSwatch\n            key={uuid()}\n            color={color}\n            veryLight={color[0] > 240 && color[1] > 240 && color[2] > 240}\n          ></StyledSwatch>\n        ))}\n      </StyledSwatchContainer>\n    </StyledContainer>\n  );\n}\n\nexport default DomImageColors;\n","export default function uInt8ClampedArrayToPixels(uInt, pixelCount) {\n  let pixels = [];\n  for (let i = 0; i < pixelCount; i += 4) {\n    pixels.push([uInt[i], uInt[i + 1], uInt[i + 2]]);\n  }\n  return pixels;\n}\n","const quantize = require(\"quantize\");\nexport default function getBugPalette(bugs, maxColorCount) {\n  if (bugs.length === 0) return Array(maxColorCount).fill([255, 255, 255]);\n  const rgbArray = bugs.map((bug) => [\n    bug.color[0],\n    bug.color[1],\n    bug.color[2],\n  ]);\n  const colorMap = quantize(rgbArray, maxColorCount);\n  return colorMap.palette();\n}\n","import styled from \"styled-components\";\n\nexport const StyledSwatch = styled.div.attrs((props) => ({\n  style: {\n    backgroundColor: `rgb(${props.color[0]},${props.color[1]},${props.color[2]})`,\n  },\n}))`\n  border-radius: 50%;\n  margin: 0px 5px 0px 5px;\n  height: 20px;\n  width: 20px;\n  box-sizing: border-box;\n  ${(props) =>\n    props.veryLight &&\n    `\n        margin: 0px 4px 0px 5px;\n        height: 19px;\n        width: 19px;\n        border: 1px solid black;\n    `}\n`;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport getBugPalette from \"./getBugPalette\";\nimport uuid from \"react-uuid\";\nimport { StyledSwatch } from \"./styles\";\nimport {\n  StyledSwatchContainer,\n  StyledTitle,\n  StyledContainer,\n} from \"../shared/styles\";\n\nfunction DomPopulationColors({ maxColorCount }) {\n  // local state\n  const [palette, setPalette] = useState(\n    Array(maxColorCount).fill([255, 255, 255])\n  );\n\n  // global state\n  const { bugs, populationSize, getLivingBugNodes } = useContext(BugsContext);\n\n  useEffect(() => {\n    const livingBugs = getLivingBugNodes(bugs, true);\n    const bugPalette = getBugPalette(livingBugs, maxColorCount);\n    setPalette(bugPalette);\n  }, [bugs, setPalette, populationSize, maxColorCount, getLivingBugNodes]);\n\n  return (\n    <StyledContainer>\n      <StyledTitle>dominant colors in population</StyledTitle>\n      <StyledSwatchContainer>\n        {palette.map((color) => (\n          <StyledSwatch\n            key={uuid()}\n            color={color}\n            veryLight={color[0] > 240 && color[1] > 240 && color[2] > 240}\n          ></StyledSwatch>\n        ))}\n      </StyledSwatchContainer>\n    </StyledContainer>\n  );\n}\n\nexport default DomPopulationColors;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n","import React from \"react\";\nimport DomImageColors from \"components/domColors/domImageColors/index\";\nimport DomPopulationColors from \"components/domColors/domPopulationColors/index\";\nimport { StyledContainer } from \"./styles\";\n\nfunction DomColors() {\n  // const\n  const MAX_COLOR_COUNT = 8;\n\n  return (\n    <StyledContainer>\n      <DomImageColors maxColorCount={MAX_COLOR_COUNT} />\n      <DomPopulationColors maxColorCount={MAX_COLOR_COUNT} />\n    </StyledContainer>\n  );\n}\n\nexport default DomColors;\n","import React, { useContext, useEffect, useRef, useCallback } from \"react\";\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport { BgImageContext } from \"globalState/bgImage/index\";\nimport { SvgDimensionsContext } from \"globalState/svgContainerDimensions/index\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport {\n  StyledSvgCanvas,\n  StyledContainer2,\n  StyledBgImg,\n  StyledImgAndCanvasContainer,\n  StyledContainer1,\n} from \"./styles\";\nimport Bug from \"components/bug/index\";\nimport getContainerOffset from \"./getContainerOffset\";\nimport DomColors from \"components/domColors/index\";\nconst _ = require(\"lodash\");\n\nfunction SvgContainer() {\n  // // global state\n  const { xxs, xs, sm, md, lg, xl } = useContext(ScreenSizesContext);\n  const { bugs, getLivingBugNodes } = useContext(BugsContext);\n  const { bgImage } = useContext(BgImageContext);\n  const { setCanvasOffset, setSvgContainerDimensions } = useContext(\n    SvgDimensionsContext\n  );\n  const { isVertical } = useContext(SnapshotsDisplayContext);\n\n  // refs\n  const svgContainerRef = useRef();\n\n  const handleResize = useCallback(\n    _.throttle(() => {\n      if (!svgContainerRef.current) return\n      const newCanvasOffset = getContainerOffset(svgContainerRef);\n      setCanvasOffset(newCanvasOffset);\n      setSvgContainerDimensions({\n        height: svgContainerRef.current.clientHeight,\n        width: svgContainerRef.current.clientWidth,\n      });\n    }, 300),\n    [svgContainerRef, setCanvasOffset, setSvgContainerDimensions]\n  );\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  useEffect(() => {\n    handleResize();\n  }, [handleResize]);\n\n  return (\n    <StyledContainer1\n      small={xxs || xs || sm}\n      big={md || lg || xl}\n    >\n      <StyledContainer2>\n        <StyledImgAndCanvasContainer>\n          <StyledBgImg\n            src={bgImage}\n            small={xxs || xs || sm}\n            big={md || lg || xl}\n            isVertical={isVertical}\n          />\n          <StyledSvgCanvas\n            ref={svgContainerRef}\n            small={xxs || xs || sm}\n            big={md || lg || xl}\n            isVertical={isVertical}\n          >\n            {getLivingBugNodes(bugs, true).map((bug, i) => (\n              <Bug key={bug.id} i={i} bug={bug} />\n            ))}\n          </StyledSvgCanvas>\n        </StyledImgAndCanvasContainer>\n      </StyledContainer2>\n      <DomColors />\n    </StyledContainer1>\n  );\n}\n\nexport default SvgContainer;\n","export default function getContainerOffset(svgContainerRef) {\n  if (!svgContainerRef.current) return {left: 0, right: 0}\n  return {\n    left: svgContainerRef.current.offsetLeft,\n    top: svgContainerRef.current.offsetTop,\n  };\n}\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n    margin-top: 20px;\n`;\n\nexport const StyledP = styled.p`\n    margin: 0px;\n    font-size: 34px;\n    font-family: 'Barrio', cursive;\n`\n\nexport const StyledTitleContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`\n","import styled from \"styled-components\";\n\nexport const StyledScrollBox = styled.div`\n  display: flex;\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  overflow: scroll;\n  overflow-x: scroll;\n\n  ${(props) =>\n    !props.isVertical &&\n    `\n        margin: 0vh 0vh 25vh 0vh;\n        align-items: center;\n    `}\n\n  ${(props) =>\n    props.isVertical &&\n    `\n        justify-content: center;\n    `}\n`;\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport { StyledScrollBox } from \"./styles\";\n\nfunction CanvasSnapshots() {\n  // global state\n  const {\n    setSnapshotsCanvasRef,\n    screenDimensions,\n    stretchFactor,\n    isVertical,\n    thickness,\n  } = useContext(SnapshotsDisplayContext);\n\n  // ref\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    setSnapshotsCanvasRef(canvasRef);\n  }, []);\n\n  return (\n    <StyledScrollBox\n      width={screenDimensions.width}\n      height={screenDimensions.height}\n      isVertical={isVertical}\n    >\n      <canvas\n        style={{\n          'flexShrink':'0'\n        }}\n        width={\n          screenDimensions.width * (isVertical ? thickness : stretchFactor)\n        }\n        height={\n          screenDimensions.height * (isVertical ? stretchFactor : thickness)\n        }\n        ref={canvasRef}\n      ></canvas>\n    </StyledScrollBox>\n  );\n}\n\nexport default CanvasSnapshots;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const StyledValueDisplay = styled.div`\n  margin: 0px 0px 0px 5px;\n  font-family: ${props => props.theme.secondaryFont}, sans-serif;\n  font-size: 14px;\n`;\n\nexport const StyledName = styled.div`\n    font-family: ${props => props.theme.secondaryFont}, sans-serif;\n    font-size: 14px;\n`;\n\nexport const StyledInputAndValueContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyledInput = styled.input`\n    height: 20px;\n    width: ${props => props.sliderWidth};\n    border: 1px solid black;\n    appearance: none;\n    box-sizing: border-box;\n    border-radius: 20px;\n    overflow: hidden;\n\n    // webkit\n    :focus { outline: none; }\n    ::-webkit-slider-runnable-track {}\n    ::-webkit-slider-thumb {\n        box-shadow: 0px 0px 0px #000000;\n        height: 18px;\n        width: 10px;\n        border-radius: 0px;\n        background: black;\n        cursor: pointer;\n        -webkit-appearance: none;\n    }\n\n    :focus::-webkit-slider-thumb { background-color: red; }\n\n    // moz\n    ::-moz-focus-outer {\n        border: none;\n    }\n    ::-moz-range-track {\n\n    }\n    ::-moz-range-thumb {\n        box-shadow: 0px 0px 0px #000000;\n        height: 18px;\n        width: 10px;\n        border-radius: 0px;\n        background: black;\n        cursor: pointer;\n        -moz-appearance: none;\n        border: none;\n    }\n    :focus::-moz-range-thumb {\n        background: red;\n    }\n\n    // ms\n    ::-ms-track {\n\n    }\n    ::-ms-thumb {\n        box-shadow: 0px 0px 0px #000000;\n        height: 18px;\n        width: 10px;\n        border-radius: 0px;\n        background: black;\n        cursor: pointer;\n        -ms-appearance: none;\n    }\n    :focus::-ms-thumb {\n        background-red;\n    }\n`;\n","import React, { useState } from \"react\";\nimport {\n  StyledContainer,\n  StyledValueDisplay,\n  StyledName,\n  StyledInputAndValueContainer,\n  StyledInput\n} from \"./styles\";\n//import { StyledInput } from \"shared/styles\";\n\nfunction Slider({\n  min,\n  max,\n  initial,\n  step,\n  name,\n  unit,\n  sliderWidth,\n  containerStyle,\n  doSomethingOnMouseUp,\n  doSomethingOnChange,\n}) {\n  // local state\n  const [rangeValue, setRangeValue] = useState(initial);\n  const [isChanging, setIsChanging] = useState(false);\n\n  const handleMouseUp = (e) => {\n    if (isChanging && doSomethingOnChange === undefined) {\n      doSomethingOnMouseUp(e.target.value);\n    }\n    setIsChanging(false);\n  };\n\n  const handleOnChange = (e) => {\n    setRangeValue(e.target.value);\n    setIsChanging(true);\n    if (doSomethingOnChange !== undefined) doSomethingOnChange(e.target.value);\n  };\n\n  return (\n    <StyledContainer style={containerStyle}>\n      <StyledName>{name}</StyledName>\n      <StyledInputAndValueContainer>\n        <StyledInput\n          type=\"Range\"\n          min={min}\n          max={max}\n          step={step}\n          value={rangeValue}\n          onMouseUp={handleMouseUp}\n          onChange={handleOnChange}\n          sliderWidth={sliderWidth}\n        ></StyledInput>\n        <StyledValueDisplay>\n          {rangeValue}\n          {unit}\n        </StyledValueDisplay>\n      </StyledInputAndValueContainer>\n    </StyledContainer>\n  );\n}\n\nexport default Slider;\n","import React, { useContext } from \"react\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport Slider from \"shared/slider/index\";\n\nfunction StretchFactorSlider() {\n  // global state\n  const { stretchFactor, setStretchFactor } = useContext(SnapshotsDisplayContext);\n\n  const handleMouseUp = (newValue) => {\n    setStretchFactor(newValue);\n  };\n\n  return (\n    <Slider\n      min={1}\n      max={25}\n      step={0.5}\n      initial={stretchFactor}\n      name={\"stretch factor\"}\n      doSomethingOnMouseUp={handleMouseUp}\n      sliderWidth=\"150px\"\n      containerStyle={{\n        width: \"200px\",\n      }}\n    />\n  );\n}\n\nexport default StretchFactorSlider;\n","import React, { useContext } from \"react\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport Slider from \"shared/slider/index\";\n\nfunction StretchFactorSlider() {\n  // global state\n  const { thickness, setThickness } = useContext(SnapshotsDisplayContext);\n\n  const handleMouseUp = (newValue) => {\n    setThickness(newValue);\n  };\n\n  return (\n    <Slider\n      min={0.1}\n      max={1}\n      step={0.1}\n      initial={thickness}\n      name={\"thickness\"}\n      doSomethingOnMouseUp={handleMouseUp}\n      sliderWidth=\"150px\"\n      containerStyle={{\n        width: \"200px\",\n      }}\n    />\n  );\n}\n\nexport default StretchFactorSlider;\n","import React, { useContext } from \"react\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport Slider from \"shared/slider/index\";\n\nfunction LineWidthSlider() {\n  // global state\n  const { lineWidth, setLineWidth } = useContext(SnapshotsDisplayContext);\n\n  const handleMouseUp = (newValue) => {\n    setLineWidth(newValue);\n  };\n\n  return (\n    <Slider\n      min={0.1}\n      max={15}\n      step={0.1}\n      initial={lineWidth}\n      name={\"line width\"}\n      doSomethingOnMouseUp={handleMouseUp}\n      sliderWidth=\"150px\"\n      containerStyle={{\n        width: \"200px\",\n      }}\n    />\n  );\n}\n\nexport default LineWidthSlider;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  margin: 20px 0px 20px 0px;\n  min-width: 60px;\n`;\n\nexport const StyledButton = styled.button`\n  margin: 0px;\n  appearance: none;\n  border: 1px solid black;\n  background-color: white;\n  padding: 5px;\n  outline: none;\n\n  ${(props) =>\n    props.isSelected &&\n    `\n    background-color: black;\n    color: white;\n  `}\n\n  ${(props) =>\n    props.left &&\n    `\n    border-radius: 5px 0px 0px 5px;\n  `}\n\n  ${(props) =>\n    props.right &&\n    `\n    border-radius: 0px 5px 5px 0px;\n  `}\n`;\n","import React, { useContext } from \"react\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport { StyledButton, StyledContainer } from \"./styles\";\n\nfunction SnapshotSwitchButton() {\n  // global state\n  const { setDisplaySvg, displaySvg } = useContext(SnapshotsDisplayContext);\n\n  return (\n    <StyledContainer>\n      <StyledButton\n        left\n        onClick={() => setDisplaySvg(true)}\n        isSelected={displaySvg}\n      >\n        lines\n      </StyledButton>\n      <StyledButton\n        right\n        onClick={() => setDisplaySvg(false)}\n        isSelected={!displaySvg}\n      >\n        grid\n      </StyledButton>\n    </StyledContainer>\n  );\n}\n\nexport default SnapshotSwitchButton;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${props => props.small && `\n    justify-content: center;\n  `}\n\n  ${props => props.big && `\n    justify-content: flex-start;\n  `}\n`;\n\n\nexport const StyledSliderContainer = styled.div`\n  display: flex;\n  margin: 0px 0px 20px 0px;\n\n  ${props => props.small && `\n    flex-direction: column;\n    align-items: flex-start;\n  `}\n\n  ${props => props.big && `\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n  `}\n`","import React, { useContext } from \"react\";\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\";\nimport StretchFactorSlider from \"components/snapshots/snapshotsControls/stretchFactorSlider/index\";\nimport ThicknessSlider from \"components/snapshots/snapshotsControls/thicknessSlider/index\";\nimport LineWidthSlider from \"components/snapshots/snapshotsControls/lineWidthSlider/index\";\nimport SnapshotSwitchButton from \"components/snapshots/snapshotsControls/snapshotSwitchButton/index\";\nimport { StyledContainer, StyledSliderContainer } from \"./styles\";\n\nfunction SnapshotsControls() {\n  // global state\n  const { xxs, xs, sm, md, lg, xl } = useContext(ScreenSizesContext);\n\n  return (\n    <StyledContainer small={xxs || xs || sm} big={md || lg || xl}>\n      <SnapshotSwitchButton />\n      <StyledSliderContainer small={xxs || xs || sm} big={md || lg || xl}>\n        <StretchFactorSlider />\n        <ThicknessSlider />\n        <LineWidthSlider />\n      </StyledSliderContainer>\n    </StyledContainer>\n  );\n}\n\nexport default SnapshotsControls;\n","import styled from \"styled-components\";\n\nexport const StyledScrollBox = styled.div`\n  display: flex;\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  overflow: scroll;\n\n  ${(props) =>\n    !props.isVertical &&\n    `\n        margin: 0vh 0vh 25vh 0vh;\n        align-items: center;\n    `}\n\n  ${(props) =>\n    props.isVertical &&\n    `\n        justify-content: center;\n    `}\n`;\n\nexport const StyledPath = styled.path`\n  :hover {\n    stroke: white;\n  }\n`;\n\nexport const StyledBackground = styled.div`\n  background-color: black;\n`;\n","import React, { useContext } from \"react\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport { StyledScrollBox, StyledPath, StyledBackground } from \"./styles\";\nimport uuid from \"react-uuid\";\n\nfunction SvgSnapshots() {\n  // global state\n  const {\n    screenDimensions,\n    stretchFactor,\n    isVertical,\n    thickness,\n    organisms,\n    lineWidth,\n  } = useContext(SnapshotsDisplayContext);\n\n  return (\n    <StyledScrollBox\n      width={screenDimensions.width}\n      height={screenDimensions.height}\n      isVertical={isVertical}\n    >\n      <StyledBackground>\n        <svg\n          width={\n            screenDimensions.width * (isVertical ? thickness : stretchFactor)\n          }\n          height={\n            screenDimensions.height * (isVertical ? stretchFactor : thickness)\n          }\n        >\n          {organisms.map((organism) => (\n            <StyledPath\n              strokeWidth={lineWidth}\n              stroke={organism.formattedColor}\n              strokeLinecap=\"round\"\n              fill=\"none\"\n              d={organism.path}\n              key={uuid()}\n            ></StyledPath>\n          ))}\n        </svg>\n      </StyledBackground>\n    </StyledScrollBox>\n  );\n}\n\nexport default SvgSnapshots;\n","import React, { useContext } from \"react\";\nimport { StyledContainer, StyledP, StyledTitleContainer } from \"./styles\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport CanvasSnapshots from \"components/snapshots/canvasSnapshots/index\";\nimport SnapshotsControls from \"components/snapshots/snapshotsControls/index\";\nimport SvgSnapshots from \"components/snapshots/svgSnapshots/index\";\n\nfunction Snapshots() {\n  // global state\n  const { displaySvg } = useContext(SnapshotsDisplayContext);\n  const { populationSnapshots } = useContext(BugsContext);\n\n  if (populationSnapshots.length === 0) return <></>;\n\n  return (\n    <StyledContainer>\n      <StyledTitleContainer>\n        <StyledP>Population Snapshots</StyledP>\n      </StyledTitleContainer>\n      <SnapshotsControls />\n      {displaySvg ? <SvgSnapshots /> : <CanvasSnapshots />}\n    </StyledContainer>\n  );\n}\n\nexport default Snapshots;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const StyledSliderContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const StyledButtonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n    background-color: rgb(222,225,230);\n`\n\nexport const StyledInnerCollapseContainer = styled.div`\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n`","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n\n    max-height: ${props => props.height}px;\n    transition: max-height 0.3s ease-in-out, margin-bottom 0.3s cubic-bezier(0,1.62,1,.68);    \n\n    ${props => props.isCollapsed && `\n        max-height: 0px;\n        margin-bottom: 0px;\n        transition: max-height 0.3s ease-in-out, margin-bottom 0.3s cubic-bezier(1,-0.13,1,-0.36);\n    `}\n`","import React, { useEffect, useState, useRef } from 'react'\nimport { StyledContainer } from './styles'\n\nfunction Collapse({children,isCollapsed,collapseContainerStyle,onClick}) {\n    const [height, setHeight] = useState(0)\n    const containerRef = useRef(null)\n\n    useEffect(() => {\n        setHeight(containerRef.current.scrollHeight)\n    },[])\n\n    return (\n        <StyledContainer\n            isCollapsed={isCollapsed}\n            style={collapseContainerStyle}\n            height={height}\n            ref={containerRef}\n            onClick={onClick}\n        >\n            {children}\n        </StyledContainer> \n    )\n}\n\nexport default Collapse","import styled from \"styled-components\";\n\nexport const StyledFileInput = styled.input`\n  cursor: pointer;\n  filter: alpha(opacity=0);\n  opacity: 0;\n  right: 0;\n  text-align: right;\n  top: 0;\n  height: 1px;\n  width: 1px;\n`;\n\nexport const StyledLabel = styled.label`\n  overflow: hidden;\n  border: 1px solid black;\n  background-color: white;\n  margin: 10px 0px 0px 0px;\n  width: 95px;\n  padding: 0px 0px 0px 5px;\n  height: 20px;\n  font-family: ${props => props.theme.secondaryFont};\n  font-size: 12px;\n  cursor: pointer;\n`\n","import React, { useContext } from \"react\";\nimport { StyledFileInput, StyledLabel } from \"./styles\";\nimport { BgImageContext } from \"globalState/bgImage/index\";\n\nfunction FileInput() {\n  // global state\n  const { setBgImage } = useContext(BgImageContext);\n\n  return (\n      <StyledLabel >\n        choose image\n        <StyledFileInput\n          title=\"\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={(e) => setBgImage(URL.createObjectURL(e.target.files[0]))}\n        />\n      </StyledLabel>  \n  );\n}\n\nexport default FileInput;\n","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n`","import React, { useContext, useCallback } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport { SvgDimensionsContext } from \"globalState/svgContainerDimensions/index\";\nimport Slider from \"shared/slider/index\";\nimport { StyledContainer } from './styles'\n\nfunction PopulationSlider() {\n  // global state\n  const {\n    populationSize,\n    setPopulationSize,\n    bugSize,\n    setPopulationSnapshots,\n    setBugs,\n    getInitialBugs,\n    setStepCount,\n  } = useContext(BugsContext);\n  const { svgContainerDimensions } = useContext(SvgDimensionsContext);\n\n  const handleMouseUp = useCallback(\n    (newValue) => {\n      const newbugs = getInitialBugs(svgContainerDimensions, newValue, bugSize);\n      setBugs(newbugs);\n      setPopulationSize(newValue);\n      setPopulationSnapshots([]);\n      setStepCount(0);\n    },\n    [\n      svgContainerDimensions,\n      bugSize,\n      setPopulationSize,\n      setPopulationSnapshots,\n      setBugs,\n      getInitialBugs,\n      setStepCount,\n    ]\n  );\n\n  return (\n    <StyledContainer>\n      <Slider\n        min={10}\n        max={80}\n        step={1}\n        initial={populationSize}\n        name={\"population\"}\n        doSomethingOnMouseUp={handleMouseUp}\n        sliderWidth={\"150px\"}\n        containerStyle={{\n          width: \"200px\",\n        }}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default PopulationSlider;\n","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n`","import React, { useContext } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport Slider from \"shared/slider/index\";\nimport { StyledContainer } from './styles'\n\nfunction BugSizeSlider() {\n  // global state\n  const { setBugSize, bugSize } = useContext(BugsContext);\n\n  return (\n    <StyledContainer>\n      <Slider\n        min={4}\n        max={70}\n        step={2}\n        initial={bugSize}\n        name={\"bug size\"}\n        unit={\"px\"}\n        doSomethingOnChange={setBugSize}\n        sliderWidth={\"150px\"}\n        containerStyle={{\n          width: \"200px\",\n        }}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default BugSizeSlider;\n","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n`","import React, { useContext } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport Slider from \"shared/slider/index\";\nimport { StyledContainer } from './styles'\n\nfunction OffspringDistanceSlider() {\n  // global state\n  const { setMaxOffspringDistance, maxOffspringDistance } = useContext(\n    BugsContext\n  );\n\n  return (\n    <StyledContainer>\n      <Slider\n        min={10}\n        max={500}\n        step={5}\n        initial={maxOffspringDistance}\n        name={\"max offspring distance\"}\n        unit={\"px\"}\n        doSomethingOnMouseUp={setMaxOffspringDistance}\n        sliderWidth={\"150px\"}\n        containerStyle={{\n          width: \"220px\",\n        }}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default OffspringDistanceSlider;\n","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n`","import React, { useContext } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\"\nimport Slider from \"shared/slider/index\";\nimport { StyledContainer } from './styles'\n\nfunction GrowSpeedSlider() {\n  // global state\n  const { growSpeed, setGrowSpeed } = useContext(BugsContext);\n  const { xxs, xs, sm, md, lg, xl } = useContext(ScreenSizesContext)\n  const small = (xxs || xs || sm)\n  const big = (md || lg || xl)\n\n  return (\n    <StyledContainer>\n      <Slider\n        min={0}\n        max={10}\n        step={0.5}\n        initial={growSpeed}\n        name={\"grow speed\"}\n        unit={\"s\"}\n        doSomethingOnMouseUp={setGrowSpeed}\n        sliderWidth={\"150px\"}\n        containerStyle={{\n          width: \"200px\",\n        }}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default GrowSpeedSlider;\n","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n`","import React, { useContext } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport Slider from \"shared/slider/index\";\nimport { StyledContainer } from './styles'\n\nfunction GrowSpeedSlider() {\n  // global state\n  const { maxMutationStep, setMaxMutationStep } = useContext(BugsContext);\n\n  return (\n    <StyledContainer>\n      <Slider\n        min={0}\n        max={255}\n        step={3}\n        initial={maxMutationStep}\n        name={\"max mutation step\"}\n        doSomethingOnMouseUp={setMaxMutationStep}\n        sliderWidth={\"150px\"}\n        containerStyle={{\n          width: \"200px\",\n        }}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default GrowSpeedSlider;\n","export const downArrowSvgString = `<svg viewBox=\"126.11 110.376 146.334 282.34\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:bx=\"https://boxy-svg.com\">\r\n<path d=\"M 198.811 110.376 L 271.511 236.297 L 126.11 236.297 L 198.811 110.376 Z\" style=\"fill: rgb(61, 38, 82);\" bx:shape=\"triangle 126.11 110.376 145.401 125.921 0.5 0 1@2d16ca3b\"/>\r\n<path d=\"M 199.744 -392.716 L 272.444 -266.795 L 127.043 -266.795 L 199.744 -392.716 Z\" style=\"fill: rgb(61, 38, 82);\" transform=\"matrix(1, 0, 0, -1, 0, 0)\" bx:shape=\"triangle 127.043 -392.716 145.401 125.921 0.5 0 1@471717ca\"/>\r\n</svg>`\r\n","import styled from \"styled-components\";\nimport { downArrowSvgString } from 'shared/downArrow'\n\nexport const StyledContainer = styled.div`\n  margin: 10px 0px 0px 0px;\n`;\n\nexport const StyledSelect = styled.select`\n  font-family: ${props => props.theme.secondaryFont};\n  margin: 0px;\n  appearance: none;\n  font-size: 12px;\n  border-radius: 0px 0px 0px 0px;\n  border: 1px solid black;\n  background-color: white;\n  padding: 0px 0px 0px 5px;\n  outline: none;\n  width: 55px;\n  height: 20px;\n  cursor: pointer;\n\n  background-image: url('data:image/svg+xml;,${downArrowSvgString}');\n  background-repeat: no-repeat;\n  background-size: 5px;\n  background-position: right 4px bottom 4px;\n`;\n\nexport const StyledP = styled.p`\n  font-family: ${props => props.theme.secondaryFont};\n  font-size: 12px;\n  margin: 0px;\n`;\n","import React, { useContext, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nimport { StyledContainer, StyledSelect, StyledP } from \"./styles\";\nimport { BgImageContext } from \"globalState/bgImage/index\";\nimport white from \"./pics/white.jpg\";\nimport sand from \"./pics/sand.jpg\";\nimport candy from \"./pics/candy.jpg\";\nimport carpet from \"./pics/carpet.jpg\";\nimport grass from \"./pics/grass.jpg\";\nimport gravel from \"./pics/gravel.jpg\";\nimport leaves from \"./pics/leaves.jpg\";\nconst pics = [\n  { url: white, name: \"white\" },\n  { url: sand, name: \"sand\" },\n  { url: candy, name: \"candy\" },\n  { url: carpet, name: \"carpet\" },\n  { url: grass, name: \"grass\" },\n  { url: gravel, name: \"gravel\" },\n  { url: leaves, name: \"leaves\" },\n];\n\nfunction PresetImageSelect() {\n  // global state\n  const { setBgImage, bgImage } = useContext(BgImageContext);\n\n  useEffect(() => {\n    setBgImage(sand);\n  }, []);\n\n  return (\n    <StyledContainer>\n      <StyledP>preset background images</StyledP>\n      <StyledSelect\n        value={bgImage || \"\"}\n        onChange={(e) => setBgImage(e.target.value)}\n      >\n        {pics.map((pic) => (\n          <option key={uuid()} value={pic.url}>\n            {pic.name}\n          </option>\n        ))}\n      </StyledSelect>\n    </StyledContainer>\n  );\n}\n\nexport default PresetImageSelect;\n","import styled from 'styled-components'\n\nexport const StyledCollapseBar = styled.div`\n    width: 100%;\n    height: 30px;\n    background-color: rgb(72,72,72);\n    color: white;\n    border-top: 1px solid white;\n    outline: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n`\n\nexport const StyledP = styled.p`\n    margin: 0px;\n    cursor: pointer;\n`","import React from 'react'\nimport {\n    StyledCollapseBar,\n    StyledP\n} from './styles'\n\nfunction CollapseBar({label,style,onClick}) {\n    return (\n    <StyledCollapseBar\n        style={style}\n        onClick={onClick}\n    >\n        <StyledP>{label}</StyledP>\n    </StyledCollapseBar>\n    )\n}\n\nexport default CollapseBar","import React, { useState } from 'react'\nimport {\n    StyledContainer, \n    StyledInnerCollapseContainer\n} from './styles'\nimport Collapse from 'components/simulationControls/collapse'\nimport FileInput from \"components/simulationControls/fileInput/index\";\nimport PopulationSlider from \"components/simulationControls/populationSlider/index\";\nimport BugSizeSlider from \"components/simulationControls/bugSizeSlider/index\";\nimport OffspringDistanceSlider from \"components/simulationControls/offspringDistanceSlider/index\";\nimport GrowSpeedSlider from \"components/simulationControls/growSpeedSlider/index\";\nimport MaxMutationSlider from \"components/simulationControls/maxMutationSlider/index\";\nimport PresetImageSelect from \"components/simulationControls/presetImageSelect/index\";\nimport CollapseBar from \"components/simulationControls/collapse/collapseBar\"\n\nfunction ControlCollapse() {\n    // local state\n    const [isCollapsed, setIsCollapsed] = useState(false)\n\n    return (\n        <StyledContainer>\n            <CollapseBar \n                label=\"Simulation Controls\"\n                onClick={() => setIsCollapsed(prev => !prev)}\n            />\n            <Collapse\n                isCollapsed={isCollapsed}\n            >\n                <StyledInnerCollapseContainer>\n                    <PopulationSlider />\n                    <BugSizeSlider />\n                    <OffspringDistanceSlider />\n                    <GrowSpeedSlider />\n                    <MaxMutationSlider />\n                    <PresetImageSelect />\n                    <FileInput />                             \n                </StyledInnerCollapseContainer>     \n            </Collapse>\n        </StyledContainer>\n    )\n}\n\nexport default ControlCollapse","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n    background-color: rgb(222,225,230);\n`","// matches a list of rgb colors in the form \"[122,34,45], [2,255,56] ...\"\nexport const colorListRegExp = new RegExp(\n  /^\\s*(\\[(([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|[0-2][0-5][0-5]),){2}([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|[0-2][0-5][0-5])\\]c?\\s*,\\s*){1,}\\[(([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|[0-2][0-5][0-5]),){2}([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|[0-2][0-5][0-5])\\]c?\\s*,*\\s*$/,\n  \"g\"\n);\n\n\nexport const rgbArrayRegExp = new RegExp(/\\[(([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|[0-2][0-5][0-5]),){2}([0-9]|[0-9][0-9]|[0-1][0-9][0-9]|[0-2][0-5][0-5])\\]c*/,'g')\n\nexport const colorValueRegExp = new RegExp(/\\d{1,3}/,'g')\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n\n  display: flex;\n  flex-direction: column;\n\n  ${props => props.small && `\n    padding: 10px;\n  `}\n\n  ${props => props.big && `\n    width: 150px;\n    margin: 10px 0px 0px 0px;\n  `}\n`;\n\nexport const StyledTextArea = styled.textarea`\n  outline: none;\n  height: 50px;\n  border: 1px solid black;\n  box-sizing: border-box;\n  margin: 3px 0px 3px 0px;\n  ${(props) =>\n    props.isInvalid &&\n    `\n        border: 2px solid red;\n  `}\n\n  ${props => props.small && `\n    width: 100%;\n  `}\n`;\n\nexport const StyledP = styled.p`\n  margin: 0px;\n  font-size: 12px;\n  ${props => props.subtext && `font-size: 10px`}\n`;\n\nexport const StyledButton = styled.button`\n  color: black;\n  appearance: none;\n  cursor: pointer;\n  height: 20px;\n  border: 1px solid black;\n  background-color: white;\n  border-radius: none;\n  margin: 10px 0px 10px 0px;\n  font-family: ${props => props.theme.secondaryFont}, sans-serif;\n  font-size: 12px;\n\n  ${(props) =>\n    props.isInvalid &&\n    `\n        cursor: not-allowed;\n        color: gray;\n    `}\n`;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport example from \"./example.js\";\nimport { colorListRegExp }  from \"./regExp\";\nimport { getArrayFromText } from './getArrayFromText'\nimport { BugsContext } from \"globalState/bugs/index\";\nimport { SvgDimensionsContext } from \"globalState/svgContainerDimensions/index\"\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\"\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\"\nimport {\n  StyledContainer,\n  StyledTextArea,\n  StyledP,\n  StyledButton,\n} from \"./styles\";\n\nfunction CustomInitialBugs() {\n  // global state\n  const { \n    setBugs,\n    bugSize, \n    getCustomInitialBugs, \n    setPopulationSize,\n    setPopulationSnapshots,\n    setStepCount,\n  } = useContext(BugsContext);\n  const { svgContainerDimensions } = useContext(SvgDimensionsContext)\n  const { resetCanvasDimens } = useContext(SnapshotsDisplayContext);\n  const {xxs, xs, sm, md, lg, xl} = useContext(ScreenSizesContext)\n\n  // local state\n  const [isInvalid, setIsInvalid] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  // screen sizes\n  const small = (xxs || xs || sm)\n  const big = (md || lg || xl)\n\n  useEffect(() => {\n    if (text.match(colorListRegExp) || text === '') {\n        return setIsInvalid(false);\n    }\n    setIsInvalid(true)\n  }, [text]);\n\n  const handleOnClick = () => {\n    if (!isInvalid) {\n        const customColorArray = getArrayFromText(text)\n        const customBugs = getCustomInitialBugs(svgContainerDimensions,bugSize,customColorArray)\n        setPopulationSize(customColorArray.length)\n        setBugs(customBugs);\n        setPopulationSnapshots([]);\n        setStepCount(0);\n        resetCanvasDimens();\n    }\n  };\n    return (\n      <StyledContainer\n        small={small}\n        big={big}\n      >\n        { big && <StyledP>custom initial bugs</StyledP> }\n        <StyledTextArea\n          small={small}\n          big={big}\n          isInvalid={isInvalid}\n          type=\"textarea\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        ></StyledTextArea>\n        <StyledP subtext >{example}</StyledP>\n        <div>\n          <StyledButton isInvalid={isInvalid} onClick={handleOnClick}>\n            set initial bugs\n          </StyledButton>\n        </div>\n      </StyledContainer>\n    );    \n}\n\nexport default CustomInitialBugs;\n","const example = `\n    takes a list of 2 more RGB colors. \n    Example: [234,12,4], [12,55,22], [111,90,202]\n`;\n\nexport default example;\n","import { rgbArrayRegExp, colorValueRegExp}  from \"./regExp\";\nexport const getArrayFromText = (text) => {\n    const rgbColorStrings = text.match(rgbArrayRegExp)\n    const colorArray = rgbColorStrings.map((colorString) => {\n        const colorValuesArray = colorString.match(colorValueRegExp)\n        const clone = colorString.match(/c/) ? true : false\n        return {\n            color: colorValuesArray.map(value => parseInt(value)),\n            clone,\n        }\n    })\n    return colorArray\n}","import React, { useState } from 'react'\nimport {\n    StyledContainer, \n} from './styles'\nimport Collapse from 'components/simulationControls/collapse'\nimport CustomInitialBugs from \"components/simulationControls/customInitialBugs/index\";\nimport CollapseBar from \"components/simulationControls/collapse/collapseBar\"\n\nfunction CustomBugCollapse() {\n    // local state\n    const [isCollapsed, setIsCollapsed] = useState(true)\n\n    return (\n        <StyledContainer>\n            <CollapseBar \n                label=\"Custom Initial Bugs\"\n                onClick={() => setIsCollapsed(prev => !prev)}\n            />\n            <Collapse\n                isCollapsed={isCollapsed}\n            >\n                <CustomInitialBugs />\n            </Collapse>\n        </StyledContainer>\n    )\n}\n\nexport default CustomBugCollapse","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button`\n  border-radius: 0px 0px 0px 0px;\n  outline: none;\n  appearance: none;\n  border: 1px solid black;\n  background-color: white;\n  cursor: pointer;\n  margin: 0px;\n  height: 20px;\n  font-family: ${props => props.theme.secondaryFont}, sans-serif;\n  font-size: 12px;\n`;\n\nexport const StyledContainer = styled.div`\n  margin: 10px 0px 0px 0px;\n    \n  ${props => props.small && `\n    margin: 15px;\n  `}\n`;\n","import React, { useContext } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\"\nimport { SvgDimensionsContext } from \"globalState/svgContainerDimensions/index\";\nimport { StyledButton, StyledContainer } from \"./styles\";\nimport { SnapshotsDisplayContext } from \"globalState/snapshotsDisplay/index\";\n\nfunction ResetButton() {\n  // global state\n  const {\n    populationSize,\n    bugSize,\n    setPopulationSnapshots,\n    setBugs,\n    getInitialBugs,\n    setStepCount,\n  } = useContext(BugsContext);\n  const { svgContainerDimensions } = useContext(SvgDimensionsContext);\n  const { resetCanvasDimens } = useContext(SnapshotsDisplayContext);\n  const { xxs, xs, sm } = useContext(ScreenSizesContext)\n\n  const handleClick = () => {\n    const newBugs = getInitialBugs(\n      svgContainerDimensions,\n      populationSize,\n      bugSize\n    );\n    setBugs(newBugs);\n    setPopulationSnapshots([]);\n    setStepCount(0);\n    resetCanvasDimens();\n  };\n\n  return (\n    <StyledContainer\n      small={xxs || xs || sm}\n    >\n      <StyledButton onClick={handleClick}>reset</StyledButton>\n    </StyledContainer>\n  );\n}\n\nexport default ResetButton;\n","import styled from \"styled-components\";\nimport { downArrowSvgString } from 'shared/downArrow'\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 10px 0px 0px 0px;\n    \n  ${props => props.small && `\n    margin: 15px;\n  `}\n`;\n\nexport const StyledButton = styled.button`\n  margin: 0px;\n  height: 20px;\n  appearance: none;\n  border: 1px solid black;\n  background-color: white;\n  font-family: ${props => props.theme.secondaryFont};\n  font-size: 12px;\n  cursor: pointer;\n`;\n\nexport const StyledSelect = styled.select`\n  cursor: pointer;\n  margin: 0px;\n  outline: none;\n  padding: 0px 0px 0px 5px;\n  appearance: none;\n  height: 20px;\n  width: 43px;\n  border: 1px solid black;\n  border-left: none;\n  outline: none;\n  font-family: ${props => props.theme.secondaryFont};\n  font-size: 12px;\n  border-radius: 0px 20px 20px 0px;\n  background-image: url('data:image/svg+xml;,${downArrowSvgString}');\n  background-repeat: no-repeat;\n  background-size: 5px;\n  background-position: right 4px bottom 4px;\n`;\n","import React, { useContext, useState, useCallback } from \"react\";\nimport { BugsContext } from \"globalState/bugs/index\";\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\"\nimport { StyledContainer, StyledButton, StyledSelect } from \"./styles\";\n\nfunction RandomStep() {\n  // local state\n  const [stepInput, setStepInput] = useState(1);\n\n  // global state\n  const {\n    bugs,\n    getRandomLivingBugNode,\n    step,\n    stepCount,\n    MAX_STEP_COUNT,\n  } = useContext(BugsContext);\n  const { xxs, xs, sm } = useContext(ScreenSizesContext)\n\n  const handleOnClick = useCallback(() => {\n    if (parseInt(stepInput) + parseInt(stepCount) > MAX_STEP_COUNT)\n      return alert(\"this will exceed max steps allowed\");\n\n    for (let i = 0; i < stepInput; i++) {\n      const randomLivingBugNode = getRandomLivingBugNode(bugs).data;\n      step(randomLivingBugNode);\n    }\n  }, [\n    bugs,\n    getRandomLivingBugNode,\n    step,\n    stepInput,\n    MAX_STEP_COUNT,\n    stepCount,\n  ]);\n\n  return (\n    <StyledContainer\n      small={xxs || xs || sm}\n    >\n      <StyledButton onClick={handleOnClick}>random step</StyledButton>\n      <StyledSelect\n        value={stepInput}\n        onChange={(e) => setStepInput(e.target.value)}\n      >\n        <option value={1}>1</option>\n        <option value={5}>5</option>\n        <option value={10}>10</option>\n        <option value={50}>50</option>\n        <option value={100}>100</option>\n        <option value={200}>200</option>\n        <option value={250}>250</option>\n        <option value={300}>300</option>\n        <option value={400}>400</option>\n        <option value={500}>500</option>\n      </StyledSelect>\n    </StyledContainer>\n  );\n}\n\nexport default RandomStep;\n","import React, { useContext } from \"react\";\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\";\nimport { \n  StyledContainer,\n  // StyledSliderContainer,\n  // StyledButtonContainer\n} from \"./styles\";\nimport ControlCollapse from \"components/simulationControls/controlCollapse/index\"\nimport CustomBugCollapse from \"components/simulationControls/customBugsCollapse/index\"\nimport FileInput from \"components/simulationControls/fileInput/index\";\nimport ResetButton from \"components/simulationControls/resetButton/index\";\nimport PopulationSlider from \"components/simulationControls/populationSlider/index\";\nimport BugSizeSlider from \"components/simulationControls/bugSizeSlider/index\";\nimport OffspringDistanceSlider from \"components/simulationControls/offspringDistanceSlider/index\";\nimport GrowSpeedSlider from \"components/simulationControls/growSpeedSlider/index\";\nimport MaxMutationSlider from \"components/simulationControls/maxMutationSlider/index\";\nimport PresetImageSelect from \"components/simulationControls/presetImageSelect/index\";\nimport RandomStep from \"components/simulationControls/randomStep/index\";\nimport CustomInitialBugs from \"components/simulationControls/customInitialBugs/index\";\n\nfunction SimulationControls() {\n  // global state\n  const { xxs, xs, sm, md, lg, xl } = useContext(ScreenSizesContext);\n\n  if (xxs || xs || sm) return (\n    <StyledContainer >\n      <ControlCollapse />\n      <CustomBugCollapse />\n      <div\n        style={{\n          display: 'flex'\n        }}\n      >\n        <ResetButton />\n        <RandomStep />        \n      </div>\n    </StyledContainer>\n  )\n\n  if (md || lg || xl) return (\n    <StyledContainer >\n      <PopulationSlider />\n      <BugSizeSlider />\n      <OffspringDistanceSlider />\n      <GrowSpeedSlider />\n      <MaxMutationSlider />     \n      <PresetImageSelect />\n      <FileInput />\n      <ResetButton />\n      <RandomStep />\n      <CustomInitialBugs />\n    </StyledContainer>\n  )\n}\n\nexport default SimulationControls;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledSubContainer1 = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  ${(props) =>\n    props.small &&\n    `\n    flex-direction: column;\n  `}\n`;","import React, { useContext } from \"react\";\nimport { ScreenSizesContext } from \"globalState/screenSizes/index\";\nimport SvgContainer from \"components/svgContainer/index\";\nimport Snapshots from \"components/snapshots/index\";\nimport SimulationControls from \"components/simulationControls/index\";\nimport { StyledContainer, StyledSubContainer1 } from \"./styles\";\n\nfunction Simulation() {\n  // gloabl state\n  const { xxs, xs, sm, md, lg, xl } = useContext(ScreenSizesContext);\n\n  return (\n    <StyledContainer small={xxs || xs || sm} big={md || lg || xl}>\n      <StyledSubContainer1 small={xxs || xs || sm} big={md || lg || xl}>\n        <SimulationControls />\n        <SvgContainer />\n      </StyledSubContainer1>\n      <Snapshots />\n    </StyledContainer>\n  );\n}\n\nexport default Simulation;","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`\n\nexport const StyledSectionHeader = styled.div`\n    text-align: center;\n    font-family: ${props => props.theme.titleFont}, sans-serif;\n    font-size: 25px;\n`\n\nexport const StyledContentColumn = styled.div`\n    margin: 20px 0px 0px 0px;\n    padding: 10px;\n    width: 100%;\n    max-width: 600px;\n`\n\nexport const StyledP = styled.p`\n    font-family: ${props => props.theme.secondaryFont}, sans-serif;\n    font-size: 16px;\n`","import React, { useContext } from 'react'\nimport { ScreenSizesContext } from 'globalState/screenSizes/index'\nimport { howToUseIt, prerequisites,relating, history, photoCredits } from './text'\nimport { \n    StyledContainer, \n    StyledSectionHeader,\n    StyledP,\n    StyledContentColumn\n } from './styles'\n\nfunction Info() {\n    // global state\n    const { xxs, xs, sm, md, lg, xl } = useContext(ScreenSizesContext)\n\n    return (\n        <StyledContainer>\n            <StyledContentColumn\n                small={xxs || xs || sm}\n                big={md || lg || xl}\n            >\n                <StyledSectionHeader>How to use it</StyledSectionHeader>\n                <StyledP>{howToUseIt}</StyledP>\n                <StyledSectionHeader>Relating the simulation to the real world</StyledSectionHeader>\n                <StyledP>{prerequisites}</StyledP>\n                <StyledP>{relating}</StyledP>\n                <StyledSectionHeader>History</StyledSectionHeader>\n                <StyledP>{history}</StyledP>\n                <StyledSectionHeader>Photo credits</StyledSectionHeader>\n                <StyledP>{photoCredits}</StyledP>\n            </StyledContentColumn>\n        </StyledContainer>\n    )\n}\n\nexport default Info","export const howToUseIt = `TL;DR: This is an evolution simulation. It is designed to demonstrate how a population evolves when subjected to a selection pressure. Here’s how it works: You, the user, act as a predator searching out and consuming prey, the bugs on the screen. Your visual abilities provide the selection pressure for bug evolution. To eat a bug, simply hover your cursor over it (or tap on touch screens). Bugs that stick out against the background image will quickly be weeded out; Bugs that are harder to find will tend to survive longer and reproduce more often. When a bug gets eaten, a randomly chosen surviving bug produces an offspring. One out, one in. The offspring undergo a mutation, so their color is slightly different than that of their parent. Eventually (usually after a couple of minutes of munching) the hard-to-find bugs will have outcompeted the stand-out bugs. The population will have evolved the strategy of camouflage as a means of survival.  You can see the progress of the simulation recorded in the Population Snapshots graphic located below the simulation screen.`\n\nexport const prerequisites = `Prerequisites: general knowledge of natural selection. Knowlege of genes, mutation, and heritability.`\n\nexport const relating = `Why is this simulation a useful one? It’s useful because it tells us something about how the world works. Specifically, the main purpose of this simulation is to show that variation is the fuel of natural selection (Dawkins?); Populations cannot evolve if their constituents do not differ from one another. This fundamental principle of evolution is the simulation’s primary takeaway. By itself, it’s not too difficult a thing to understand. But there’s a real risk of it being only partially understood if taken out of context. What I want to point out is that the point the simulation makes is a general one. It applies to natural selection wherever it occurs, whether in the wildernesses of the world, on a different planet, or in a computer simulation. This is because natural selection is an algorithmic process. Its operation does not depend on a specific medium (For a complete account of this idea, read ’Darwin’s Dangerous Idea’ by Daniel Dennett). So, when relating this simulation to the real world, it's not just about colorful insects, or animals in the woods, or even living organisms. It’s about natural selection as an abstract process. In short, this simulation is an exercise in generalizing the principles of evolution. 7-29-20: To be continued...`\n\nexport const history = `This simulation, like its own bugs, has evolved over time. The present version is the fourth generation. Beth Bishop and Charles Anderson describe the first version in June, 1986 in EVOLUTION BY NATURAL SELECTION: A TEACHING MODULE (link: https://files.eric.ed.gov/fulltext/ED272383.pdf) They describe an instructional game involving bead bugs (actual beads) on a blanket. The game was made into a computer simulation in the mid 90’s by Steve Brewer of U-Mass, with the most recent version released on 6/10/1995. In 2005, Uri Wilensky and M. Novak implemented the game in Wilensky’s NetLogo platform, a powerful population simulation framework. In the present version, Bishop and Anderson’s core concept survives. I based this version primarily on Wilensky and Novak’s model. These are the features that I added: \n1) population snapshots - graphical representation of the bug tree of decent\n2) dominant colors in image/ dominant colors in population\n3) random step capability\n4) custom initial bugs - choose whatever color bugs you want in the simulation’s initial state, rather than a random set. \n\nI am pleased to offer this newest iteration of the bead bug hunt, and I look forward to someone making an even better version.`\n\nexport const photoCredits = `sand: “Sand from Gobi Desert” by Siim Sepp – Own work. Licensed under CC BY-SA 3.0 via Wikimedia Commons.\n\ncandy: Marco Guidi/EyeEm/Getty Images\n\ncarpet: https://www.homedepot.com/p/TrafficMASTER-Lake-View-Dovetail-Texture-12-ft-Carpet-HD102-102-1200-AB/308243816\n\ngravel: petsolutions.com\n\nleaves: Minerva Studio/Shutterstock\n\ngrass: https://www.pennington.com/all-products/grass-seed/resources/how-to-bring-your-lawn-back-to-life-in-5-simple-steps`","import styled from 'styled-components'\n\nexport const StyledButton = styled.button`\n    font-family: ${props => props.theme.titleFont}, sans-serif;\n    font-size: 25px;\n    border-radius: 50px;\n    width: ${props => props.width};\n    height: ${props => props.height};\n    background-color: transparent;\n    appearance: none;\n    border: 1px solid black;\n    outline: none;\n    cursor: pointer;\n    margin: 10px;\n\n    :hover {\n        color: white;\n        background-color: black;\n    }\n`","import React from 'react'\nimport { StyledButton } from \"components/header/shared/styles\"\nimport { Link } from 'react-router-dom'\n\nfunction InfoLinkButton() {\n    return (\n        <Link\n            to=\"/info\"\n        >\n            <StyledButton\n                height=\"30px\"\n                width=\"60px\"\n            >\n                info\n            </StyledButton>\n        </Link>\n    )\n}\n\nexport default InfoLinkButton","import React from 'react'\nimport { StyledButton } from \"components/header/shared/styles\"\nimport { Link } from 'react-router-dom'\n\nfunction HomeLinkButton() {\n    return (\n        <Link\n            to=\"/\"\n        >\n            <StyledButton\n                height=\"30px\"\n                width=\"75px\"\n            >\n                back\n            </StyledButton>\n        </Link>\n    )\n} \n\nexport default HomeLinkButton","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n`\n\n\nexport const StyledP = styled.p`\n    text-align: center;\n    margin: 10px 10px 0px 10px;\n    font-size: 50px;\n    font-family: ${props => props.theme.titleFont}, sans-serif;\n`","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport InfoLinkButton from \"components/header/infoLinkButton/index\"\nimport HomeLinkButton from \"components/header/homeLinkButton/index\"\nimport {\n    StyledContainer,\n    StyledP,\n} from './styles'\n\nfunction Header() {\n    // location\n    const location = useLocation()\n\n    return (\n        <StyledContainer>\n            <StyledP>Bug Hunt Camoflage</StyledP>\n            { location.pathname === '/' ? <InfoLinkButton /> : <HomeLinkButton />}\n        </StyledContainer>\n    )\n}\n\nexport default Header","import styled from 'styled-components'\n\nexport const StyledContainer = styled.div`\n    background-color: rgb(188, 204, 200);\n    with: 100%;\n    padding: 10px;\n`\n\nexport const StyledP = styled.p`\n    font-size: 12px;\n    margin: 10px 0px 0px 0px;\n`","import React from 'react'\nimport { citation, citationDescription } from './citation'\nimport { Link } from 'react-router-dom'\nimport {\n    StyledContainer,\n    StyledP\n} from './styles'\n\nfunction Footer() {\n    return (\n        <StyledContainer>\n            <StyledP>{citationDescription}<Link to='/info'>more info.</Link></StyledP>\n            <StyledP>{citation}</StyledP>\n        </StyledContainer>\n    )\n}\n\nexport default Footer","export const citation = `Novak, M. and Wilensky, U. (2005). NetLogo Bug Hunt Camouflage model. http://ccl.northwestern.edu/netlogo/models/BugHuntCamouflage. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.`\n\nexport const citationDescription = `This simulation has an interesting history. Its most recent ancestor is a NetLogo model of the same name created by U. Wilensky and M. Novak.  `","import styled from 'styled-components'\n\nexport const StyledAppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const StyledSubContainer1 = styled.div`\n    min-height: 100vh;\n`","import React from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Simulation from \"components/simulation/index\";\nimport Info from \"components/info/index\"\nimport Header from \"components/header/index\"\nimport Footer from \"components/footer/index\"\nimport { StyledAppContainer, StyledSubContainer1 } from './AppStyles'\n\nfunction App() {\n  return (\n    <StyledAppContainer>\n      <StyledSubContainer1>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Simulation />} />\n          <Route exact path=\"/info\" render={() => <Info />} />\n          <Route exact path=\"/not_found\" render={() => <p>page not found</p>} />\n          <Redirect to=\"/not_found\"/>\n        </Switch>\n      </StyledSubContainer1>\n      <Footer />\n    </StyledAppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ScreenSizesProvider from \"globalState/screenSizes/index\";\nimport BugsProvider from \"globalState/bugs/index\";\nimport BgImageProvider from \"globalState/bgImage/index\";\nimport SvgDimensionsProvider from \"globalState/svgContainerDimensions/index\";\nimport SnapshotsDisplayProvider from \"globalState/snapshotsDisplay/index\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from \"styled-components\";\nimport { mainTheme } from './mainTheme'\n\nReactDOM.render(\n    <React.StrictMode>\n      <ThemeProvider theme={mainTheme}>\n        <BrowserRouter>\n          <ScreenSizesProvider>\n            <SvgDimensionsProvider>\n              <BugsProvider>\n                <BgImageProvider>\n                  <SnapshotsDisplayProvider>\n                    <App />\n                  </SnapshotsDisplayProvider>\n                </BgImageProvider>\n              </BugsProvider>\n            </SvgDimensionsProvider>\n          </ScreenSizesProvider>\n        </BrowserRouter>\n      </ThemeProvider>\n    </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const mainTheme = {\n    titleFont:'Barrio',\n    secondaryFont: 'Poppins'\n}"],"sourceRoot":""}